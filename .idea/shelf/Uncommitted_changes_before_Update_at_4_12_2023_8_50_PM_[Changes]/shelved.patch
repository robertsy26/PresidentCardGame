Index: app/src/main/java/com/example/president/HumanPlayer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.president;\r\n\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.os.Handler;\r\nimport android.util.Log;\r\nimport android.widget.ImageView;\r\n\r\nimport com.example.GameFramework.GameMainActivity;\r\nimport com.example.GameFramework.infoMessage.GameInfo;\r\nimport com.example.GameFramework.infoMessage.GameState;\r\nimport com.example.GameFramework.players.GameHumanPlayer;\r\n\r\n// random comment, to delete later\r\n\r\nimport java.util.Collections;\r\n\r\npublic class HumanPlayer extends GameHumanPlayer {\r\n    private ImageView iv_deck = null;\r\n    private ImageView iv_card1 = null;\r\n    private ImageView iv_card2 = null;\r\n    private ImageView iv_card3 = null;\r\n    private ImageView iv_card4 = null;\r\n    private ImageView iv_card5 = null;\r\n    private ImageView iv_card6 = null;\r\n    private ImageView iv_card7 = null;\r\n    private ImageView iv_card8 = null;\r\n    private ImageView iv_card9 = null;\r\n    private ImageView iv_card10 = null;\r\n    private ImageView iv_card11 = null;\r\n    private ImageView iv_card12 = null;\r\n    private ImageView iv_card13 = null;\r\n\r\n    private GameMainActivity presidentActivity;\r\n    Cards cardClass = new Cards();\r\n\r\n\r\n    private static final String TAG = \"HumanPlayer\";\r\n\r\n    // Not sure if I need this\r\n    private Handler myHandler;\r\n    /**\r\n     * constructor\r\n     *\r\n     * @param name the name of the player\r\n     */\r\n\r\n    int[] cards;\r\n\r\n    public HumanPlayer(String name) {\r\n        super(name);\r\n        cards = new int[13];\r\n    }\r\n\r\n    @Override\r\n    public View getTopView() {\r\n        return presidentActivity.findViewById(R.id.top_gui_layout);\r\n    }\r\n\r\n    @Override\r\n    public void receiveInfo(GameInfo info) {\r\n      /*  // wait until handler is there\r\n        if (myHandler == null) Thread.yield();\r\n\r\n        // post message to the handler\r\n        Log.d(TAG, \"receiveInfo - about to post\");\r\n        myHandler.post(new MyRunnable(info, false));\r\n        Log.d(TAG, \"receiveInfo - done with post\");*/\r\n\r\n        if(!(info instanceof GameState)){\r\n            this.flash(1,2000);\r\n            return;\r\n        }\r\n\r\n        PresidentGameState pga = (PresidentGameState) info;\r\n\r\n    }\r\n\r\n\r\n\r\n    public void onClick(View button){\r\n\r\n    }\r\n\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        iv_card1.setVisibility(View.INVISIBLE);\r\n        iv_card2.setVisibility(View.INVISIBLE);\r\n        iv_card3.setVisibility(View.INVISIBLE);\r\n        iv_card4.setVisibility(View.INVISIBLE);\r\n        iv_card5.setVisibility(View.INVISIBLE);\r\n        iv_card6.setVisibility(View.INVISIBLE);\r\n        iv_card7.setVisibility(View.INVISIBLE);\r\n        iv_card8.setVisibility(View.INVISIBLE);\r\n        iv_card9.setVisibility(View.INVISIBLE);\r\n        iv_card10.setVisibility(View.INVISIBLE);\r\n        iv_card11.setVisibility(View.INVISIBLE);\r\n        iv_card12.setVisibility(View.INVISIBLE);\r\n        iv_card13.setVisibility(View.INVISIBLE);\r\n\r\n\r\n        iv_deck.setOnClickListener(new View.OnClickListener(){\r\n            public void onClick(View view){\r\n                cardClass.setCards();\r\n                Collections.shuffle(cardClass.cards);\r\n                cardClass.assignImages(cardClass.cards.get(0), iv_card1);\r\n                cardClass.assignImages(cardClass.cards.get(1), iv_card2);\r\n                cardClass.assignImages(cardClass.cards.get(2), iv_card3);\r\n                cardClass.assignImages(cardClass.cards.get(3), iv_card4);\r\n                cardClass.assignImages(cardClass.cards.get(4), iv_card5);\r\n                cardClass.assignImages(cardClass.cards.get(5), iv_card6);\r\n                cardClass.assignImages(cardClass.cards.get(6), iv_card7);\r\n                cardClass.assignImages(cardClass.cards.get(7), iv_card8);\r\n                cardClass.assignImages(cardClass.cards.get(8), iv_card9);\r\n                cardClass.assignImages(cardClass.cards.get(9), iv_card10);\r\n                cardClass.assignImages(cardClass.cards.get(10), iv_card11);\r\n                cardClass.assignImages(cardClass.cards.get(11), iv_card12);\r\n                cardClass.assignImages(cardClass.cards.get(12), iv_card13);\r\n\r\n\r\n                iv_card1.setVisibility(View.VISIBLE);\r\n                iv_card2.setVisibility(View.VISIBLE);\r\n                iv_card3.setVisibility(View.VISIBLE);\r\n                iv_card4.setVisibility(View.VISIBLE);\r\n                iv_card5.setVisibility(View.VISIBLE);\r\n                iv_card6.setVisibility(View.VISIBLE);\r\n                iv_card7.setVisibility(View.VISIBLE);\r\n                iv_card8.setVisibility(View.VISIBLE);\r\n                iv_card9.setVisibility(View.VISIBLE);\r\n                iv_card10.setVisibility(View.VISIBLE);\r\n                iv_card11.setVisibility(View.VISIBLE);\r\n                iv_card12.setVisibility(View.VISIBLE);\r\n                iv_card13.setVisibility(View.VISIBLE);\r\n\r\n                iv_deck.setVisibility((View.INVISIBLE));\r\n                iv_deck.setClickable(true);\r\n\r\n\r\n\r\n\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n    @Override\r\n    public void setAsGui(GameMainActivity activity) {\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/president/HumanPlayer.java b/app/src/main/java/com/example/president/HumanPlayer.java
--- a/app/src/main/java/com/example/president/HumanPlayer.java	(revision 7ab5241a9aa186f67cd8279d5e39b9306c55fc7c)
+++ b/app/src/main/java/com/example/president/HumanPlayer.java	(date 1680744613708)
@@ -11,8 +11,6 @@
 import com.example.GameFramework.infoMessage.GameState;
 import com.example.GameFramework.players.GameHumanPlayer;
 
-// random comment, to delete later
-
 import java.util.Collections;
 
 public class HumanPlayer extends GameHumanPlayer {
Index: app/src/main/java/com/example/president/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.president;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.media.Image;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.widget.ImageView;\r\n\r\nimport com.example.GameFramework.GameMainActivity;\r\nimport com.example.GameFramework.LocalGame;\r\nimport com.example.GameFramework.gameConfiguration.GameConfig;\r\nimport com.example.GameFramework.infoMessage.GameState;\r\n\r\nimport java.util.Collection;\r\nimport java.util.Collections;\r\n\r\npublic class MainActivity extends AppCompatActivity {\r\n    ImageView iv_deck, iv_card1,iv_card2,iv_card3,iv_card4,iv_card5,iv_card6,iv_card7,iv_card8,iv_card9,iv_card10,iv_card11,iv_card12,iv_card13, imageView2;\r\n    Cards card = new Cards();\r\n\r\n\r\n    @Override\r\n    protected void onCreate (Bundle savedInstanceSate) {\r\n        super.onCreate(savedInstanceSate);\r\n        setContentView(R.layout.activity_main);\r\n\r\n        iv_deck = (ImageView) findViewById(R.id.iv_deck);\r\n        iv_card1 = (ImageView) findViewById(R.id.iv_card1);\r\n        iv_card2 = (ImageView) findViewById(R.id.iv_card2);\r\n        iv_card3 = (ImageView) findViewById(R.id.iv_card3);\r\n        iv_card4 = (ImageView) findViewById(R.id.iv_card4);\r\n        iv_card5 = (ImageView) findViewById(R.id.iv_card5);\r\n        iv_card6 = (ImageView) findViewById(R.id.iv_card6);\r\n        iv_card7 = (ImageView) findViewById(R.id.iv_card7);\r\n        iv_card8 = (ImageView) findViewById(R.id.iv_card8);\r\n        iv_card9 = (ImageView) findViewById(R.id.iv_card9);\r\n        iv_card10 = (ImageView) findViewById(R.id.iv_card10);\r\n        iv_card11 = (ImageView) findViewById(R.id.iv_card11);\r\n        iv_card12 = (ImageView) findViewById(R.id.iv_card12);\r\n        iv_card13 = (ImageView) findViewById(R.id.iv_card13);\r\n        imageView2 = (ImageView) findViewById(R.id.imageView2);\r\n\r\n        iv_card1.setVisibility(View.INVISIBLE);\r\n        iv_card2.setVisibility(View.INVISIBLE);\r\n        iv_card3.setVisibility(View.INVISIBLE);\r\n        iv_card4.setVisibility(View.INVISIBLE);\r\n        iv_card5.setVisibility(View.INVISIBLE);\r\n        iv_card6.setVisibility(View.INVISIBLE);\r\n        iv_card7.setVisibility(View.INVISIBLE);\r\n        iv_card8.setVisibility(View.INVISIBLE);\r\n        iv_card9.setVisibility(View.INVISIBLE);\r\n        iv_card10.setVisibility(View.INVISIBLE);\r\n        iv_card11.setVisibility(View.INVISIBLE);\r\n        iv_card12.setVisibility(View.INVISIBLE);\r\n        iv_card13.setVisibility(View.INVISIBLE);\r\n\r\n        iv_deck.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                card.setCards();\r\n                Collections.shuffle(card.cards);\r\n\r\n                card.assignImages(card.cards.get(0), iv_card1);\r\n                card.assignImages(card.cards.get(1), iv_card2);\r\n                card.assignImages(card.cards.get(2), iv_card3);\r\n                card.assignImages(card.cards.get(3), iv_card4);\r\n                card.assignImages(card.cards.get(4), iv_card5);\r\n                card.assignImages(card.cards.get(5), iv_card6);\r\n                card.assignImages(card.cards.get(6), iv_card7);\r\n                card.assignImages(card.cards.get(7), iv_card8);\r\n                card.assignImages(card.cards.get(8), iv_card9);\r\n                card.assignImages(card.cards.get(9), iv_card10);\r\n                card.assignImages(card.cards.get(10), iv_card11);\r\n                card.assignImages(card.cards.get(11), iv_card12);\r\n                card.assignImages(card.cards.get(12), iv_card13);\r\n\r\n                iv_card1.setVisibility(View.VISIBLE);\r\n                iv_card2.setVisibility(View.VISIBLE);\r\n                iv_card3.setVisibility(View.VISIBLE);\r\n                iv_card4.setVisibility(View.VISIBLE);\r\n                iv_card5.setVisibility(View.VISIBLE);\r\n                iv_card6.setVisibility(View.VISIBLE);\r\n                iv_card7.setVisibility(View.VISIBLE);\r\n                iv_card8.setVisibility(View.VISIBLE);\r\n                iv_card9.setVisibility(View.VISIBLE);\r\n                iv_card10.setVisibility(View.VISIBLE);\r\n                iv_card11.setVisibility(View.VISIBLE);\r\n                iv_card12.setVisibility(View.VISIBLE);\r\n                iv_card13.setVisibility(View.VISIBLE);\r\n                card.assignImages(500,imageView2);\r\n\r\n\r\n\r\n\r\n\r\n            }\r\n        });\r\n\r\n        iv_card1.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                iv_deck.setVisibility((View.VISIBLE));\r\n                card.assignImages(card.cards.get(0), imageView2);\r\n                iv_card1.setVisibility((View.INVISIBLE));\r\n            }\r\n        });\r\n        iv_card2.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                iv_deck.setVisibility((View.VISIBLE));\r\n                card.assignImages(card.cards.get(1), imageView2);\r\n                iv_card2.setVisibility((View.INVISIBLE));\r\n\r\n            }\r\n        });\r\n        iv_card3.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                iv_deck.setVisibility((View.VISIBLE));\r\n                card.assignImages(card.cards.get(2), imageView2);\r\n                iv_card3.setVisibility((View.INVISIBLE));\r\n\r\n            }\r\n        });\r\n        iv_card4.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                iv_deck.setVisibility((View.VISIBLE));\r\n                card.assignImages(card.cards.get(3), imageView2);\r\n\r\n                iv_card4.setVisibility((View.INVISIBLE));\r\n\r\n            }\r\n        });\r\n        iv_card5.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                iv_deck.setVisibility((View.VISIBLE));\r\n                card.assignImages(card.cards.get(4), imageView2);\r\n\r\n                iv_card5.setVisibility((View.INVISIBLE));\r\n\r\n            }\r\n        });\r\n        iv_card6.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                iv_deck.setVisibility((View.VISIBLE));\r\n                card.assignImages(card.cards.get(5), imageView2);\r\n                iv_card6.setVisibility((View.INVISIBLE));\r\n\r\n            }\r\n        });\r\n        iv_card7.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                iv_deck.setVisibility((View.VISIBLE));\r\n                card.assignImages(card.cards.get(6), imageView2);\r\n                iv_card7.setVisibility((View.INVISIBLE));\r\n\r\n            }\r\n        });\r\n        iv_card8.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                iv_deck.setVisibility((View.VISIBLE));\r\n                card.assignImages(card.cards.get(7), imageView2);\r\n                iv_card8.setVisibility((View.INVISIBLE));\r\n\r\n            }\r\n        });\r\n\r\n        iv_card9.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                iv_deck.setVisibility((View.VISIBLE));\r\n                card.assignImages(card.cards.get(8), imageView2);\r\n                iv_card9.setVisibility((View.INVISIBLE));\r\n\r\n            }\r\n        });\r\n\r\n        iv_card10.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                iv_deck.setVisibility((View.VISIBLE));\r\n                card.assignImages(card.cards.get(9), imageView2);\r\n                iv_card10.setVisibility((View.INVISIBLE));\r\n\r\n            }\r\n        });\r\n\r\n        iv_card11.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                iv_deck.setVisibility((View.VISIBLE));\r\n                card.assignImages(card.cards.get(10), imageView2);\r\n                iv_card11.setVisibility((View.INVISIBLE));\r\n\r\n            }\r\n        });\r\n\r\n        iv_card12.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                iv_deck.setVisibility((View.VISIBLE));\r\n                card.assignImages(card.cards.get(11), imageView2);\r\n                iv_card12.setVisibility((View.INVISIBLE));\r\n\r\n            }\r\n        });\r\n\r\n        iv_card13.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                iv_deck.setVisibility((View.VISIBLE));\r\n                card.assignImages(card.cards.get(12), imageView2);\r\n                iv_card13.setVisibility((View.INVISIBLE));\r\n\r\n            }\r\n        });\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n//private static final int PORT_NUMBER = 3384;\r\n\r\n\r\n\r\n\r\n   /* @Override\r\n    public GameConfig createDefaultConfig() {\r\n\r\n        ArrayList<GamePlayerType> playerType = new ArrayList<>();\r\n        playerType.add(new GamePlayerType(\"Human Player\") {\r\n            @Override\r\n            public GamePlayer createPlayer(String name) {\r\n                return new HumanPlayer(name);\r\n            }\r\n        });\r\n\r\n        playerType.add(new GamePlayerType(\"Computer Player\") {\r\n            @Override\r\n            public GamePlayer createPlayer(String name) {\r\n                return new PresidentComputerPlayer(name);\r\n            }\r\n        });\r\n\r\n        GameConfig defaultConfig = new GameConfig(playerType, 4, 4, \"Pig\", PORT_NUMBER);\r\n        defaultConfig.addPlayer(\"Human\", 0); // player 1: a human player\r\n        defaultConfig.addPlayer(\"Computer\", 1); // player 2: a computer player\r\n        defaultConfig.addPlayer(\"Computer\", 2);\r\n        defaultConfig.addPlayer(\"Computer\",4);\r\n\r\n        defaultConfig.setRemoteData(\"Remote Human Player\", \"\", 0);\r\n\r\n        return defaultConfig;\r\n\r\n\r\n    }\r\n\r\n\r\n    public LocalGame createLocalGame(GameState gameState) {\r\n        return null;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n    */
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/president/MainActivity.java b/app/src/main/java/com/example/president/MainActivity.java
--- a/app/src/main/java/com/example/president/MainActivity.java	(revision 7ab5241a9aa186f67cd8279d5e39b9306c55fc7c)
+++ b/app/src/main/java/com/example/president/MainActivity.java	(date 1680744613718)
@@ -15,6 +15,7 @@
 
 import java.util.Collection;
 import java.util.Collections;
+import java.util.ArrayList;
 
 public class MainActivity extends AppCompatActivity {
     ImageView iv_deck, iv_card1,iv_card2,iv_card3,iv_card4,iv_card5,iv_card6,iv_card7,iv_card8,iv_card9,iv_card10,iv_card11,iv_card12,iv_card13, imageView2;
Index: app/src/main/java/com/example/GameFramework/GameMainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.GameFramework;\r\n\r\nimport java.util.ArrayList;\r\n\r\nimport android.app.Activity;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.content.DialogInterface.OnClickListener;\r\nimport android.content.res.Configuration;\r\nimport android.content.res.Resources;\r\nimport android.os.Bundle;\r\nimport android.view.KeyEvent;\r\nimport android.view.Menu;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.view.inputmethod.InputMethodManager;\r\nimport android.widget.AdapterView;\r\nimport android.widget.AdapterView.OnItemSelectedListener;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.CheckBox;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageButton;\r\nimport android.widget.Spinner;\r\nimport android.widget.TabHost;\r\nimport android.widget.TableLayout;\r\nimport android.widget.TableRow;\r\nimport android.widget.TextView;\r\nimport android.widget.TabHost.TabSpec;\r\nimport com.example.GameFramework.gameConfiguration.GameConfig;\r\nimport com.example.GameFramework.gameConfiguration.GamePlayerType;\r\nimport com.example.GameFramework.infoMessage.GameState;\r\nimport com.example.GameFramework.players.GamePlayer;\r\nimport com.example.GameFramework.utilities.IPCoder;\r\nimport com.example.GameFramework.utilities.Logger;\r\nimport com.example.GameFramework.utilities.MessageBox;\r\nimport com.example.GameFramework.utilities.Saving;\r\nimport com.example.president.R;\r\n\r\n/**\r\n * class GameMainActivity\r\n *\r\n * is the main activity for the game framework. To create a new game, create a\r\n * sub-class of this class that implements its abstract methods below.\r\n *\r\n * @author Andrew M. Nuxoll\r\n * @author Steven R. Vegdahl\r\n * @author Eric Imperio\r\n * @date Version 2020\r\n */\r\npublic abstract class GameMainActivity extends Activity implements\r\n        View.OnClickListener {\r\n    //Tag for Logging\r\n    private static final String TAG = \"GameMainActivity\";\r\n    /*\r\n     * ====================================================================\r\n     * Instance Variables\r\n     * --------------------------------------------------------------------\r\n     */\r\n\r\n    // A reference to the object representing the game itself. This is the\r\n    // object that knows the rules of the game. This variable is initialized in\r\n    // launchGame.\r\n    private Game game = null;\r\n\r\n    // an array containing references to all the players that are playing the game\r\n    private GamePlayer[] players = null;\r\n\r\n    // tells which player, if any, is running in the GUI\r\n    private GamePlayer guiPlayer = null;\r\n\r\n    // whether the game is over\r\n    private boolean gameIsOver = false;\r\n\r\n    // whether it is so early in the game that the configuration screen may\r\n    // not have been fully linked to the GUI\r\n    private boolean justStarted = true;\r\n\r\n    // whether the game is in the \"configuration\" stage, before the actual game\r\n    // has started\r\n    private boolean doingConfiguration = true;\r\n\r\n    /**\r\n     * contains the game configuration this activity will be used to initialize\r\n     */\r\n    GameConfig config = null;\r\n\r\n    // Each of these is initialized to point to various GUI controls\r\n    TableLayout playerTable = null;\r\n    public ArrayList<TableRow> tableRows = new ArrayList<TableRow>();\r\n\r\n    public ArrayList<TableRow> test (){\r\n        return tableRows;\r\n    }\r\n\r\n    //Keeping the user's configuration for restarting\r\n    private GameConfig restartConfig = null;\r\n\r\n\r\n    /*\r\n     * ====================================================================\r\n     * Abstract Methods\r\n     *\r\n     * To create a game using the game framework you must create a subclass of\r\n     * GameMainActivity that implements the following methods.\r\n     * --------------------------------------------------------------------\r\n     */\r\n    /**\r\n     * Creates a default, game-specific configuration for the current game.\r\n     *\r\n     * IMPORTANT: The default configuration must be a legal configuration!\r\n     *\r\n     * @return an instance of the GameConfig class that defines a default\r\n     *         configuration for this game. (The default may be subsequently\r\n     *         modified by the user if this is allowed.)\r\n     */\r\n    public abstract GameConfig createDefaultConfig();\r\n\r\n    /**\r\n     * createLocalGame\r\n     *\r\n     * Creates a new game that runs on the server tablet. For example, if\r\n     * you were creating tic-tac-toe, you would implement this method to return\r\n     * an instance of your TTTLocalGame class which, in turn, would be a\r\n     * subclass of {@link LocalGame}.\r\n     * @param gameState\r\n     *              The desired gameState to start at or null for new game\r\n     *\r\n     * @return a new, game-specific instance of a sub-class of the LocalGame\r\n     *         class.\r\n     */\r\n    public abstract LocalGame createLocalGame(GameState gameState);\r\n\r\n    /**\r\n     * Creates a \"proxy\" game that acts as an intermediary between a local\r\n     * player and a game that is somewhere else on the net.\r\n     *\r\n     * @param hostName\r\n     *            the name of the machine where the game resides. (e.g.,\r\n     *            \"upibmg.egr.up.edu\")\r\n     * @return the ProxyGame object that was created\r\n     */\r\n    private ProxyGame createRemoteGame(String hostName) {\r\n        int portNum = getPortNumber();\r\n        return ProxyGame.create(portNum, hostName);\r\n    }\r\n\r\n    /*\r\n     * ====================================================================\r\n     * Public Methods\r\n     * --------------------------------------------------------------------\r\n     */\r\n    /**\r\n     * onCreate\r\n     *\r\n     * \"main\" for the game framework\r\n     */\r\n    @Override\r\n    public final void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n\r\n        //Set Context for Toast Logging\r\n        Logger.setContext(getApplicationContext());\r\n\r\n        // Initialize the layout\r\n        setContentView(R.layout.game_config_main);\r\n\r\n        // create the default configuration for this game\r\n        this.config = createDefaultConfig();\r\n\r\n        // if there is a saved configuration, modify the default configuration accordingly\r\n        if (!this.config.restoreSavedConfig(saveFileName(), this)) {\r\n            MessageBox.popUpMessage(Resources.getSystem().getString(R.string.Config_Error_Msg),\r\n                    this);\r\n        }\r\n\r\n        if (this.config.isUserModifiable()) { // normal run: user has chance to modify configuration\r\n\r\n            // initialize and show the GUI that allows the user to specify the game's\r\n            // configuration\r\n            initStarterGui();\r\n\r\n            // hide the soft keyboard, so the that user does not need to dismiss it (which\r\n            // he would often want to do)\r\n            hideSoftKeyboard();\r\n\r\n            // allow buttons to interact\r\n            justStarted = false;\r\n        }\r\n        else { // special run (during debugging?): use the given configuration, unmodified\r\n            String msg = launchGame(this.config, null);\r\n            if (msg != null) {\r\n                // we have an error message\r\n                MessageBox.popUpMessage(msg, this);\r\n            }\r\n        }\r\n\r\n        if (((CheckBox) findViewById(R.id.onScreenLogging)).isChecked()) {\r\n            Logger.setToastValue(true);\r\n        } else {\r\n            Logger.setToastValue(false);\r\n        }\r\n        if (((CheckBox) findViewById(R.id.debugLogging)).isChecked()){\r\n            Logger.setDebugValue(true);\r\n        }else {\r\n            Logger.setDebugValue(false);\r\n        }\r\n    }// onCreate\r\n\r\n    /**\r\n     * Returns the name of the configuration save-file.\r\n     *\r\n     * @return\r\n     * \t\tthe name of the configuration file for this application to use\r\n     */\r\n    private String saveFileName() {\r\n        return \"savedConfig\"+getPortNumber()+\".dat\";\r\n    }//saveFileName\r\n\r\n    /**\r\n     * hides the soft keyboard so that the use does not need to dismiss it\r\n     */\r\n    private void hideSoftKeyboard() {\r\n        // create a runnable object that waits for things to settle down, and then\r\n        // hides the window\r\n        Runnable runner = new Runnable() {\r\n            public void run() {\r\n                try {\r\n                    // wait for one second\r\n                    Thread.sleep(1000);\r\n\r\n                    // hide the keyboard\r\n                    InputMethodManager inputMethodManager = (InputMethodManager)\r\n                            getSystemService(Context.INPUT_METHOD_SERVICE);\r\n                    inputMethodManager.hideSoftInputFromWindow(getCurrentFocus().getWindowToken(),\r\n                            InputMethodManager.RESULT_UNCHANGED_SHOWN);\r\n                }\r\n                catch (Exception x) {\r\n                    // catch and ignore any exceptions we might encounter\r\n                }\r\n            }\r\n        };\r\n\r\n        // run the thread\r\n        Thread t = new Thread(runner);\r\n        t.start();\r\n//\t\ttry {\r\n//\t\t\t// join the thread to that we don't get ahead of it\r\n//\t\t\tt.join();\r\n//\t\t} catch (InterruptedException e) {\r\n//\t\t}\r\n\r\n    }//hideSoftKeyboard\r\n\r\n    /**\r\n     * Callback-method, called when the configuration changes--typically when the tablet\r\n     * is rotated.\r\n     */\r\n    public void onConfigurationChanged(Configuration newConfig) {\r\n\r\n        // Perform superclass configuration changes\r\n        super.onConfigurationChanged(newConfig);\r\n\r\n        // if still on the configuration screen, continue showing it;\r\n        // otherwise, set the new GUI (which may have changed) for the\r\n        // human player\r\n        if (!doingConfiguration) {\r\n            if (guiPlayer != null) {\r\n                // if there is a GUI player, link it to the activity\r\n                guiPlayer.gameSetAsGui(this);\r\n            }\r\n            else {\r\n                // if there is no GUI player, set the layout to be one\r\n                // with a \"no GUI\" message\r\n                setContentView(R.layout.game_no_gui);\r\n            }\r\n        }\r\n    }//onConfigurationChanged\r\n\r\n    /**\r\n     * Creates the game and players, and starts the game.\r\n     *\r\n     * @param config\r\n     *            is the configuration for this game\r\n     * @param gameState\r\n     *            the gameState for this game\r\n     * @return\r\n     * \t\t\tnull if the launch was successful; otherwise a message telling\r\n     * \t\t\twhy game could not be launched\r\n     */\r\n    private final String launchGame(GameConfig config, GameState gameState) {\r\n\r\n        // Set the title text with the game's name\r\n        this.setTitle(config.getGameName());\r\n\r\n        // create the game if it's local (we defer remote game creation\r\n        // until further down so that we do not attempt to make the\r\n        // network connection until other errors are checked)\r\n        if (config.isLocal()) { // local game\r\n            game = createLocalGame(gameState);\r\n            // verify we have a game\r\n            if (game == null) {\r\n                return Resources.getSystem().getString(R.string.Game_Creation_Error_Msg);\r\n            }\r\n        }\r\n\r\n        //////////////////////////////////////\r\n        // create the players\r\n        //////////////////////////////////////\r\n        int requiresGuiCount = 0; // the number of players that require a GUI\r\n        guiPlayer = null; // the player that will be our GUI player\r\n        players = new GamePlayer[config.getNumPlayers()]; // the array to contains our players\r\n\r\n        // loop through each player\r\n        for (int i = 0; i < players.length; i++) {\r\n            String name = config.getSelName(i); // the player's name\r\n            GamePlayerType gpt = config.getSelType(i); // the player's type\r\n            GamePlayerType[] availTypes = config.getAvailTypes(); // the available player types\r\n            players[i] = gpt.createPlayer(name); // create the player\r\n\r\n            // check that the player name is legal\r\n            if (name.length() <= 0 && gpt != availTypes[availTypes.length-1]) {\r\n                // disallow an empty player name, unless it's a dummy (proxy) player\r\n                return getString(R.string.Local_Player_Name_Error_Msg);\r\n            }\r\n\r\n            // if the player requires a GUI, count and mark it; otherwise, if a player\r\n            // supports a GUI and the \"requires\" count is zero, mark it\r\n            if (players[i].requiresGui()) {\r\n                requiresGuiCount++;\r\n                guiPlayer = players[i];\r\n            }\r\n            else if (guiPlayer == null && players[i].supportsGui()) {\r\n                guiPlayer = players[i];\r\n            }\r\n        }\r\n\r\n        // create the game if it's remote\r\n        if (!config.isLocal()) { // remote game\r\n            game = createRemoteGame(config.getIpCode());\r\n            // verify we have a game\r\n            if (game == null) {\r\n                return getString(R.string.Game_Server_Error_Msg);\r\n            }\r\n        }\r\n\r\n        // if there is more than one player that requires a GUI, abort\r\n        if (requiresGuiCount >= 2) {\r\n            return getString(R.string.Mult_GUI_Tabl_Error_Msg);\r\n        }\r\n\r\n        // if there is a player that supports a GUI, link it to the activity,\r\n        // otherwise set the GUI to be a \"dummy\" one with a \"no GUI\" message\r\n        if (guiPlayer != null) {\r\n            guiPlayer.gameSetAsGui(this);\r\n        }\r\n        else {\r\n            // set the layout to be one with a \"no GUI\" message\r\n            setContentView(R.layout.game_no_gui);\r\n        }\r\n\r\n        // mark the configuration as being completed\r\n        doingConfiguration = false;\r\n\r\n        // start the game; then return null to indicate that the launch was\r\n        // successful\r\n        game.start(players);\r\n        return null;\r\n\r\n    }// launchGame\r\n\r\n    /**\r\n     * initializes the pages in the tabbed dialog\r\n     */\r\n    protected void initTabs() {\r\n        // Setup the tabbed dialog on the layout and add the content of each tab\r\n        TabHost tabHost = (TabHost) findViewById(R.id.tabHost);\r\n        tabHost.setup();\r\n        //Adding Local Tab for Local Game or Host Game\r\n        TabSpec localTabSpec = tabHost.newTabSpec(localTabString());\r\n        localTabSpec.setContent(R.id.localGameTab);\r\n        localTabSpec.setIndicator(localTabString());\r\n        //Adding Remote Tab for Remote WiFi Game connection\r\n        TabSpec remoteTabSpec = tabHost.newTabSpec(remoteTabString());\r\n        remoteTabSpec.setContent(R.id.remoteGameTab);\r\n        remoteTabSpec.setIndicator(remoteTabString());\r\n        //Adding Settings Tab that can be customized to allow for customized rules\r\n        TabSpec settingsTabSpec = tabHost.newTabSpec(settingsTabString());\r\n        settingsTabSpec.setContent(R.id.gameSettingsTab);\r\n        settingsTabSpec.setIndicator(settingsTabString());\r\n        tabHost.addTab(localTabSpec);\r\n        tabHost.addTab(remoteTabSpec);\r\n        tabHost.addTab(settingsTabSpec);\r\n\r\n        // make sure the current tab is the right one\r\n        tabHost.setCurrentTab(config.isLocal() ? 0 : 1);\r\n\r\n    }// initTabs\r\n\r\n    /**\r\n     * initialize the rows in the player table\r\n     */\r\n    protected void initTableRows() {\r\n\r\n        // save away the information about whether we're on the local tab;\r\n        // set things temporarily ab being true so that the rows end up in\r\n        // the first tab\r\n        boolean savedIsLocal = config.isLocal();\r\n        config.setLocal(true);\r\n\r\n        // put a row in the table for each player in the config\r\n        this.playerTable = (TableLayout) findViewById(R.id.configTableLayout);\r\n        int numPlayers = config.getNumPlayers();\r\n        for (int i = 0; i < numPlayers; ++i) {\r\n\r\n            // add the row\r\n            TableRow row = addPlayer();\r\n\r\n            // Set the player name\r\n            TextView playerName = (TextView) row\r\n                    .findViewById(R.id.playerNameEditText);\r\n            playerName.setText(config.getSelName(i));\r\n\r\n            // Set the initial selection for the spinner\r\n            GamePlayerType[] selTypes = config.getSelTypes(); // the player types in the config\r\n            GamePlayerType[] availTypes = config.getAvailTypes(); // the available player types\r\n            Spinner typeSpinner = (Spinner) row\r\n                    .findViewById(R.id.playerTypeSpinner); // the spinner for the current player\r\n            // search through to find the one whose label matches; set it as the selection\r\n            for (int j = 0; j < availTypes.length; ++j) {\r\n                if (selTypes[i].getTypeName().equals(availTypes[j].getTypeName())) {\r\n                    typeSpinner.setSelection(j);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // set up our spinner so that when its last element (\"Network Player\") is selected,\r\n            // the corresponding EditText (the player name) is disabled.\r\n            typeSpinner.setOnItemSelectedListener(new SpinnerListListener(playerName, availTypes.length-1));\r\n\r\n        }// for\r\n\r\n        // restore the 'isLocal' property of the configuration object\r\n        config.setLocal(savedIsLocal);\r\n\r\n    }// initTableRows\r\n\r\n    protected void initRemoteWidgets() {\r\n        //Set the remote name\r\n        EditText remoteNameEditText = (EditText)findViewById(R.id.remoteNameEditText);\r\n        remoteNameEditText.setText(config.getRemoteName());\r\n\r\n        // index of remote player type\r\n        GamePlayerType remotePlayerType = config.getRemoteSelType();\r\n        GamePlayerType[] availTypes = config.getAvailTypes();\r\n        Spinner remoteTypeSpinner = (Spinner)findViewById(R.id.remote_player_spinner);\r\n        for (int j = 0; j < availTypes.length; ++j) {\r\n            if (remotePlayerType.getTypeName().equals(availTypes[j].getTypeName())) {\r\n                remoteTypeSpinner.setSelection(j);\r\n                break;\r\n            }\r\n        }\r\n\r\n        //Set the IP code\r\n        EditText ipCodeEditText = (EditText)findViewById(R.id.remoteIPCodeEditText);\r\n        ipCodeEditText.setText(config.getIpCode());\r\n    }\r\n\r\n    protected void initSettingsTab(){\r\n        //Override if the game has customizable rules\r\n    }\r\n\r\n    /**\r\n     * places the data from this.config into the GUI.\r\n     *\r\n     */\r\n    protected void initStarterGui() {\r\n        // do nothing without a game config\r\n        if (this.config == null)\r\n            return;\r\n\r\n        // Set the title text using the game's name\r\n        this.setTitle(config.getGameName() + \" Configuration\");\r\n\r\n        // place the pages in the tabbed dialog\r\n        initTabs();\r\n\r\n        // Insert a row for each player in the current config\r\n        initTableRows();\r\n\r\n        // Set the remote widget data\r\n        initRemoteWidgets();\r\n\r\n        //Set up the Settings Tab\r\n        initSettingsTab();\r\n\r\n        // Set myself as the listener for the buttons\r\n        View v = findViewById(R.id.addPlayerButton);\r\n        v.setOnClickListener(this);\r\n        v = findViewById(R.id.saveConfigButton);\r\n        v.setOnClickListener(this);\r\n        v = findViewById(R.id.playGameButton);\r\n        v.setOnClickListener(this);\r\n        v = findViewById(R.id.onScreenLogging);\r\n        v.setOnClickListener(this);\r\n        v = findViewById(R.id.debugLogging);\r\n        v.setOnClickListener(this);\r\n\r\n\r\n        String ipCode = IPCoder.encodeLocalIP();\r\n        String ipAddress = IPCoder.getLocalIpAddress();\r\n        TextView ipText = (TextView)findViewById(R.id.ipCodeLabel);\r\n        ipText.setText(ipText.getText()+ipCode+\" (\"+ipAddress+\") \");\r\n\r\n    }// initStarterGui\r\n\r\n    @Override\r\n    public boolean onCreateOptionsMenu(Menu menu) {\r\n        getMenuInflater().inflate(R.menu.game_main, menu);\r\n        return true;\r\n    }//onCreateOptionsMenu\r\n\r\n    @Override\r\n    public boolean onOptionsItemSelected(MenuItem item) {\r\n        switch (item.getItemId()) {\r\n            case R.id.menu_help:\r\n                Logger.log(TAG, \"This is the help button!\");\r\n                return true;\r\n            case R.id.save_game:\r\n                Logger.log(TAG, \"This is the save button!\");\r\n                if( this.game != null){\r\n                    Logger.log(TAG, \"The Game Exists!\");\r\n                    MessageBox.popUpSaveGame(\"Name your game:\", this);\r\n                } else {\r\n                    Logger.log(TAG, \"No Game Exists!\");\r\n                    MessageBox.popUpMessage(\"You cannot save a game without first starting a game (Click Anywhere to dismiss).\", this);\r\n                }\r\n                return true;\r\n            case R.id.load_game:\r\n                Logger.log(TAG, \"This is the loading button!\");\r\n                MessageBox.popUpLoadGame(\"Select Your Game: \", this);\r\n                return true;\r\n            case R.id.delete_game:\r\n                Logger.log(TAG, \"This is the delete button!\");\r\n                MessageBox.popUpDeleteGame(\"Select the Game to Delete: \", this);\r\n                return true;\r\n            default:\r\n                return super.onOptionsItemSelected(item);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * this method is called whenever the user clicks on a button.\r\n     *\r\n     * <p>\r\n     * NOTE: With the current layout it could either be a Button or ImageButton.\r\n     */\r\n    public void onClick(View button) {\r\n\r\n        Logger.log(TAG, \"Clicked \"+button);\r\n\r\n        // if the GUI many not have been fully initialized, ignore\r\n        if (justStarted) {\r\n            return;\r\n        }\r\n\r\n        // Add Player Button\r\n        if (button.getId() == R.id.addPlayerButton) {\r\n            addPlayer();\r\n            this.playerTable.invalidate(); // show the user the change\r\n        }\r\n\r\n        // Delete Player Button\r\n        else if (button.getId() == R.id.delPlayerButton) {\r\n            // Search the existing players to find out which delete button got\r\n            // clicked\r\n            for (int i = 0; i < this.tableRows.size(); i++) {\r\n                TableRow row = tableRows.get(i);\r\n\r\n                View v = row.findViewById(R.id.delPlayerButton);\r\n                if (v == button) {\r\n                    // found it! remove from the layout and the list\r\n                    removePlayer(row);\r\n                }\r\n            }\r\n\r\n        }// else if (delete button)\r\n\r\n        //Save Config Button\r\n        else if (button.getId() == R.id.saveConfigButton) {\r\n            GameConfig configTemp = scrapeData();\r\n            if (configTemp.saveConfig(saveFileName(), this)) {\r\n                MessageBox.popUpMessage(getString(R.string.Saved_Config_Msg), this);\r\n            }\r\n            else {\r\n                MessageBox.popUpMessage(getString(R.string.Saved_Config_Error_Msg), this);\r\n            }\r\n        }\r\n\r\n        //Start Game Button\r\n        else if (button.getId() == R.id.playGameButton) {\r\n            String msg = startGame();\r\n            if (msg != null) {\r\n                // we have an error message\r\n                MessageBox.popUpMessage(msg, this);\r\n            }\r\n\r\n        }\r\n\r\n        //On-screen debugging checkbox\r\n        else if(button.getId() == R.id.onScreenLogging){\r\n            if(((CheckBox)button).isChecked()){\r\n                Logger.setToastValue(true);\r\n            }else{\r\n                Logger.setToastValue(false);\r\n            }\r\n        }\r\n\r\n        //Console debugging checkbox\r\n        else if(button.getId() == R.id.debugLogging){\r\n            if(((CheckBox)button).isChecked()){\r\n                Logger.setDebugValue(true);\r\n            }else{\r\n                Logger.setDebugValue(false);\r\n            }\r\n        }\r\n\r\n    }// onClick\r\n\r\n    private String startGame() {\r\n        GameConfig finalConfig = scrapeData();\r\n        //Saving the user's inputs in case they want to restart the game later\r\n        this.restartConfig = finalConfig;\r\n        return launchGame(finalConfig, null);\r\n    }\r\n\r\n    /**\r\n     * removePlayer\r\n     *\r\n     * removes the player in the table associated with a given TableRow object\r\n     *\r\n     * <p>\r\n     * NOTE: this method will refuse to delete a row if the total would drop\r\n     * below the minimum allowed by the game configuration.\r\n     */\r\n    private void removePlayer(TableRow row) {\r\n        // first, make sure that we won't exceed the min number of players\r\n        if (this.tableRows.size() <= config.getMinPlayers()) {\r\n            MessageBox.popUpMessage(getString(R.string.Min_Player_Error_Msg),this);\r\n            return;\r\n        }\r\n        this.playerTable.removeView(row);\r\n        this.tableRows.remove(row);\r\n\r\n    }// removePlayer\r\n\r\n    /**\r\n     * addPlayer\r\n     *\r\n     * adds a new, blank row to the player table and initializes instance\r\n     * variables and listeners appropriately\r\n     *\r\n     * @return a reference to the TableRow object that was created or null on\r\n     *         failure\r\n     */\r\n    private TableRow addPlayer() {\r\n        // first, make sure that we won't exceed the max number of players\r\n        if (this.tableRows.size() >= config.getMaxPlayers()) {\r\n            MessageBox.popUpMessage(getString(R.string.Max_Player_Error_Msg),\tthis);\r\n            return null;\r\n        }\r\n\r\n        // add the row\r\n        TableRow row = (TableRow) getLayoutInflater().inflate(\r\n                R.layout.game_player_list_row, playerTable, false);\r\n\r\n        // Initialize the values in the Spinner control\r\n        //\t\tGamePlayerType[] selTypes = config.getSelTypes();\r\n        GamePlayerType[] availTypes = config.getAvailTypes();\r\n        ArrayAdapter<CharSequence> adapter = new ArrayAdapter<CharSequence>(\r\n                this, android.R.layout.simple_spinner_item);\r\n        adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n        for (GamePlayerType gpt : availTypes) {\r\n            adapter.add(gpt.getTypeName());\r\n        }\r\n        Spinner typeSpinner = (Spinner) row\r\n                .findViewById(R.id.playerTypeSpinner);\r\n        typeSpinner.setAdapter(adapter);\r\n        // link player name field and spinner\r\n        TextView playerName = (TextView) row\r\n                .findViewById(R.id.playerNameEditText);\r\n        typeSpinner.setOnItemSelectedListener(new SpinnerListListener(playerName, availTypes.length-1));\r\n        typeSpinner.setSelection(0);\r\n\r\n        ArrayAdapter<CharSequence> adapter2 = new ArrayAdapter<CharSequence>(\r\n                this, android.R.layout.simple_spinner_item);\r\n        adapter2.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n        for (int j = 0; j < availTypes.length-1; j++) {\r\n            // leaves out the last item (network player)\r\n            adapter2.add(availTypes[j].getTypeName());\r\n        }\r\n        Spinner remoteTypeSpinner = (Spinner)findViewById(R.id.remote_player_spinner);\r\n        remoteTypeSpinner.setAdapter(adapter2);\r\n\r\n        // set myself up as the button listener for the button\r\n        ImageButton delButton = (ImageButton) row\r\n                .findViewById(R.id.delPlayerButton);\r\n        delButton.setOnClickListener(this);\r\n\r\n        // add the row to the right lists and layout\r\n        this.tableRows.add(row);\r\n        playerTable.addView(row);\r\n\r\n        return row;\r\n    }// addPlayer\r\n\r\n    /**\r\n     * scrapeData\r\n     *\r\n     * retrieves all the data from the GUI and creates a new GameConfig object\r\n     * with it\r\n     */\r\n    public GameConfig scrapeData() {\r\n\r\n        // First make a copy of the original config without the players\r\n        GameConfig result = config.copyWithoutPlayers();\r\n\r\n        // Set remote/local\r\n        TabHost tabHost = (TabHost)findViewById(R.id.tabHost);\r\n        result.setLocal(tabHost.getCurrentTab() == 0);\r\n\r\n        // Retrieve the info for each player and add to the config\r\n        for (TableRow row : this.tableRows) {\r\n            //player name\r\n            EditText nameEditor = (EditText) row\r\n                    .findViewById(R.id.playerNameEditText);\r\n            String name = nameEditor.getText().toString();\r\n\r\n            //index of player type\r\n            Spinner typeSpinner = (Spinner) row\r\n                    .findViewById(R.id.playerTypeSpinner);\r\n            int selIndex = typeSpinner.getSelectedItemPosition();\r\n\r\n            //add to the config\r\n            result.addPlayer(name, selIndex);\r\n        }//for\r\n\r\n        //Set the remote name\r\n        EditText remoteNameEditText = (EditText)findViewById(R.id.remoteNameEditText);\r\n        String remoteName = remoteNameEditText.getText().toString();\r\n        result.setRemoteName(remoteName);\r\n\r\n        //index of remote player type\r\n        Spinner remoteTypeSpinner = (Spinner)findViewById(R.id.remote_player_spinner);\r\n        int selIndex = remoteTypeSpinner.getSelectedItemPosition();\r\n        result.setRemoteSelType(selIndex);\r\n\r\n        //Set the IP code\r\n        EditText ipCodeEditText = (EditText)findViewById(R.id.remoteIPCodeEditText);\r\n        String ipCode = ipCodeEditText.getText().toString();\r\n        result.setIpCode(ipCode);\r\n\r\n        return result;\r\n    }// scrapeData\r\n\r\n    /**\r\n     * Call-back method when a soft key-event happens. Intercepts the \"back\" button\r\n     * so that the activity is not killed with out user confirmation (unless the\r\n     * game is already over).\r\n     */\r\n    @Override\r\n    public boolean onKeyDown(int keyCode, KeyEvent event) {\r\n        if (keyCode == KeyEvent.KEYCODE_BACK && !gameIsOver) {\r\n            // We have seen the back-key pressed, and the game is not over;\r\n            // confirm with user that whether they want to quit\r\n            String quitQuestion =\r\n                    getString(R.string.dialog_quit_question);\r\n            String posLabel =\r\n                    getString(R.string.dialog_quit_label);\r\n            String negLabel =\r\n                    getString(R.string.dialog_continue_label);\r\n            MessageBox.popUpChoice(quitQuestion, posLabel, negLabel,\r\n                    new OnClickListener(){\r\n                        public void onClick(DialogInterface di, int val) {\r\n                            // if the user says that he wants to quit, exit the\r\n                            // application\r\n                            System.exit(0);\r\n                        }},\r\n                    null,\r\n                    this);\r\n            // return 'true' because we have handled this event\r\n            return true;\r\n        }\r\n        else {\r\n            // otherwise (not BACK key, or game is over), allow superclass method\r\n            // to handle it\r\n            return super.onKeyDown(keyCode, event);\r\n        }\r\n    }// onKeyDown\r\n\r\n    /**\r\n     * Gets the port number for this configuration\r\n     *\r\n     * @return the configuration's port number\r\n     */\r\n    private int getPortNumber() {\r\n        return config.getPortNum();\r\n    }\r\n\r\n    /**\r\n     * marks the game as being over\r\n     *\r\n     * @param b\r\n     * \t\t\ttells whether the game is over\r\n     */\r\n    public void setGameOver(boolean b) {\r\n        gameIsOver = b;\r\n    }// setGameOver\r\n\r\n    public boolean getGameOver() { return gameIsOver; }\r\n\r\n    /**\r\n     *  the label for the local tab header\r\n     *\r\n     * @return\r\n     * \t\tthe label for the local tab header\r\n     */\r\n    private String localTabString() {\r\n        return this.getResources().getString(R.string.local_tab);\r\n    }// localTabString\r\n\r\n    /**\r\n     *  the label for the remote tab header\r\n     *\r\n     * @return\r\n     * \t\tthe label for the remote tab header\r\n     */\r\n    private String remoteTabString() {\r\n        return this.getResources().getString(R.string.remote_tab);\r\n    }// remoteTabString\r\n\r\n\r\n    /**\r\n     *  the label for the settings tab header\r\n     *\r\n     * @return\r\n     * \t\tthe label for the settings tab header\r\n     */\r\n    private String settingsTabString(){\r\n        return this.getResources().getString(R.string.settings_tab);\r\n    }\r\n\r\n\r\n    /**\r\n     * Helper-class so that we disable the name fields in the configuration\r\n     * if the user has selected \"Network player\".\r\n     */\r\n    private static class SpinnerListListener implements OnItemSelectedListener {\r\n\r\n        // the textView to disable\r\n        private TextView correspondingTextField;\r\n\r\n        // the position in the spinner of the \"Network Player\" selection\r\n        private int disableIndex;\r\n\r\n        /**\r\n         * constructor\r\n         *\r\n         * @param txt\r\n         * \t\t\tthe TextView object\r\n         * @param idxNum\r\n         * \t\t\tthe index of the \"Network Player\" item in the spinner\r\n         */\r\n        public SpinnerListListener(TextView txt, int idxNum) {\r\n            correspondingTextField = txt;\r\n            disableIndex = idxNum;\r\n        }//constructor\r\n\r\n        /**\r\n         * callback method when an item is selected\r\n         *\r\n         * @param parent\r\n         *\t\tthe AdapterView where the selection happened\r\n         * @param view\r\n         *\t\tthe view within the AdapterView that was clicked\r\n         * @param position\r\n         *\t\tthe position in the spinner of the new selection\r\n         * @param id\r\n         *\t\tthe row id of the item that is selected\r\n         */\r\n        public void onItemSelected(AdapterView<?> parent, View view, int position,\r\n                                   long id) {\r\n            // enable the corresponding TextView depending on whether the \"disabling\"\r\n            // position was selected\r\n            correspondingTextField.setEnabled(position != disableIndex);\r\n        }// onItemSelected\r\n\r\n        /**\r\n         * callback method when nothing is selected\r\n         *\r\n         * @param parent\r\n         *\t\tthe AdapterView where the selection happened\r\n         */\r\n        public void onNothingSelected(AdapterView<?> parent) {\r\n            // do nothing\r\n        }// onNothingSelected\r\n\r\n    }// class SpinnerListListener\r\n\r\n    /**\r\n     * finishes the activity\r\n     *\r\n     * @param v\r\n     * \t\tthe object that cause the callback\r\n     */\r\n    public void doFinish(View v) {\r\n        finish();\r\n    }\r\n\r\n    /**\r\n     * Restarts the activity (the game) with the configuration the user selected when they originally\r\n     * started the game\r\n     */\r\n    public void restartGame(){\r\n        //Might need to fake a configuration for the restart to work properly\r\n        String msg = launchGame(this.restartConfig, null);\r\n        if (msg != null) {\r\n            // we have an error message\r\n            MessageBox.popUpMessage(msg, this);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * saveGame, saves the current configuration and gameState\r\n     * @param gameName\r\n     * @return String representation of the gameState\r\n     */\r\n    public GameState saveGame(String gameName) {\r\n        Logger.log(TAG, \"Saving: \" + gameName);\r\n        config.saveConfig(gameName + \".c\" , this);\r\n        GameState gameState = getGameState();\r\n        Saving.writeToFile(gameState, gameName, this.getApplicationContext());\r\n        return gameState;\r\n    }\r\n\r\n    /**\r\n     * loadGame, load the config and gameState for selected gameName\r\n     * NOTE: This should be called and overritten by your Game's MainActivity\r\n     *\r\n     * @param gameName\r\n     * @return null\r\n     */\r\n    public GameState loadGame(String gameName) {\r\n        config.restoreSavedConfig(gameName + \".c\", this);\r\n        // Sub class should do this part\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Gets the current gameState to save\r\n     * @return the current GameState\r\n     */\r\n    protected GameState getGameState(){\r\n        return game.getGameState();\r\n    }\r\n\r\n    /**\r\n     * startLoadedGame, starts the loaded GameState\r\n     *\r\n     * @param gameState\r\n     */\r\n    public void startLoadedGame(GameState gameState){\r\n        String msg = launchGame(this.config, gameState);\r\n        if (msg != null) {\r\n            // we have an error message/\r\n            MessageBox.popUpMessage(msg, this);\r\n        }\r\n    }\r\n\r\n    public String getGameString(String gameName){\r\n        return this.getString(R.string.app_name) + \"_\" + gameName;\r\n    }\r\n\r\n    //////////////////////\r\n    // TESTING\r\n    //////////////////////\r\n\r\n    /*\r\n     * gets the GameConfig for this game\r\n     */\r\n    public GameConfig getConfig() {\r\n        return this.config;\r\n    }\r\n\r\n    public boolean isGameNull() {\r\n        return game == null;\r\n    }\r\n\r\n    public Game getGame() {\r\n        return game;\r\n    }\r\n\r\n    ///////////////////////\r\n    //END TESTING\r\n    ///////////////////////\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/GameFramework/GameMainActivity.java b/app/src/main/java/com/example/GameFramework/GameMainActivity.java
--- a/app/src/main/java/com/example/GameFramework/GameMainActivity.java	(revision 7ab5241a9aa186f67cd8279d5e39b9306c55fc7c)
+++ b/app/src/main/java/com/example/GameFramework/GameMainActivity.java	(date 1680744613729)
@@ -213,7 +213,7 @@
      * 		the name of the configuration file for this application to use
      */
     private String saveFileName() {
-        return "savedConfig"+getPortNumber()+".dat";
+        return "savedConfig"+config.getPortNum()+".dat";
     }//saveFileName
 
     /**
Index: .idea/shelf/Uncommitted_changes_before_Update_at_3_31_2023_12_25_AM_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_3_31_2023_12_25_AM_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_3_31_2023_12_25_AM_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_3_31_2023_12_25_AM_[Changes]/shelved.patch	(revision 7ab5241a9aa186f67cd8279d5e39b9306c55fc7c)
+++ /dev/null	(revision 7ab5241a9aa186f67cd8279d5e39b9306c55fc7c)
@@ -1,265 +0,0 @@
-Index: app/src/main/java/com/example/president/PresidentGameState.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.president;\r\n\r\nimport static com.example.GameFramework.utilities.Saving.SEPARATOR;\r\n\r\nimport com.example.GameFramework.gameConfiguration.GamePlayerType;\r\nimport com.example.GameFramework.infoMessage.GameState;\r\nimport com.example.GameFramework.players.GamePlayer;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\n\r\npublic class PresidentGameState extends GameState {\r\n    private int playerId; // the player\r\n    final int maxCardsHand = 13;\r\n    final int numCardsDeck = 52;\r\n    public int currentHand; //how many players the card has on his turn\r\n    public boolean isCardCorrect; //check if the card is playable\r\n    public boolean isCardVisible;\r\n    public boolean is3Spade; // dictates which player starts first\r\n    public int rankings; //numbers corresponds to a stage\r\n    // public Object card;\r\n    private int player1score;\r\n    private int player2score;\r\n    private int player3score;\r\n    private int player4score;\r\n\r\n    int player1Cards[] = new int[13];\r\n    int player2Cards[] = new int[13];\r\n    int player3Cards[] = new int[13];\r\n    int player4Cards[] = new int[13];\r\n\r\n    int allPlayers[][] = new int[4][13];\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    ArrayList <GamePlayerType> player = new ArrayList<GamePlayerType>();\r\n\r\n\r\n\r\n\r\n\r\n    public PresidentGameState() { // basic constructor intializing the variables\r\n        player1score = 0;\r\n        player2score = 0;\r\n        player3score = 0;\r\n        player4score = 0;\r\n        player.add(new GamePlayerType(\"Local Human Player\") {\r\n            @Override\r\n            public GamePlayer createPlayer(String name) {\r\n                return new HumanPlayer(name);\r\n            }\r\n        });\r\n\r\n        player.add(new GamePlayerType(\"Local Computer Player\") {\r\n            @Override\r\n            public GamePlayer createPlayer(String name) {\r\n                return new PresidentComputerPlayer(name);\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    public PresidentGameState(PresidentGameState president){ // copy costructor that makes deep copies\r\n        this.playerId = playerId;\r\n        // cards;\r\n        this.currentHand = president.currentHand;\r\n        this.isCardCorrect = president.isCardCorrect;\r\n        this.isCardVisible = president.isCardVisible;\r\n        this.is3Spade = president.is3Spade;\r\n        this.rankings = president.rankings;\r\n        this.player1score = president.getPlayer1score();\r\n        this.player2score = president.getPlayer2score();\r\n        this.player3score = president.getPlayer3score();\r\n        this.player4score = president.getPlayer4score();\r\n\r\n\r\n\r\n    }\r\n\r\n    public void setPlayer1score(int player1score) {\r\n        this.player1score = player1score;\r\n    }\r\n    public void setPlayer2score(int player2score) {\r\n        this.player1score = player2score;\r\n    }\r\n    public void setPlayer3score(int player3score) {\r\n        this.player1score = player3score;\r\n    }\r\n    public void setPlayer4score(int player4score) {\r\n        this.player1score = player4score;\r\n    }\r\n    public void setPlayerId(int id){\r\n        this.playerId = id;\r\n    }\r\n    public void setPlayer1Cards (int[] player){\r\n        player1Cards = player;\r\n    }\r\n    public void setPlayer2Cards (int[] player){\r\n        player2Cards = player;\r\n    }\r\n    public void setPlayer3Cards (int[] player){\r\n        player3Cards = player;\r\n    }\r\n    public void setPlayer4Cards (int[] player){\r\n        player4Cards = player;\r\n    }\r\n\r\n    public int getPlayer1score(){\r\n        return player1score;\r\n    }\r\n    public int getPlayer2score(){\r\n        return player2score;\r\n    }\r\n    public int getPlayer3score(){\r\n        return player3score;\r\n    }\r\n    public int getPlayer4score(){\r\n        return player4score;\r\n    }\r\n    public int getPlayerId() {return playerId;}\r\n    public int[] getPlayer1Cards (){\r\n        return player1Cards;\r\n    }\r\n    public int[] getPlayer2Cards (){\r\n        return player2Cards;\r\n    }\r\n    public int[] getPlayer3Cards (){\r\n        return player3Cards;\r\n    }\r\n    public int[] getPlayer4Cards (){\r\n        return player4Cards;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/president/PresidentGameState.java b/app/src/main/java/com/example/president/PresidentGameState.java
---- a/app/src/main/java/com/example/president/PresidentGameState.java	(revision 38d2a175f6ea503e23ff0b520259900f929e54af)
-+++ b/app/src/main/java/com/example/president/PresidentGameState.java	(date 1680193448573)
-@@ -30,7 +30,9 @@
-     int player3Cards[] = new int[13];
-     int player4Cards[] = new int[13];
- 
--    int allPlayers[][] = new int[4][13];
-+    int allPlayers[][];
-+
-+    int currentPlayer;
- 
- 
- 
-@@ -40,6 +42,8 @@
- 
-     ArrayList <GamePlayerType> player = new ArrayList<GamePlayerType>();
- 
-+    boolean emptyStack = true;
-+
- 
- 
- 
-@@ -49,6 +53,8 @@
-         player2score = 0;
-         player3score = 0;
-         player4score = 0;
-+
-+        allPlayers = new int[][]{player1Cards, player2Cards, player3Cards, player4Cards};
-         player.add(new GamePlayerType("Local Human Player") {
-             @Override
-             public GamePlayer createPlayer(String name) {
-@@ -63,6 +69,7 @@
-             }
-         });
- 
-+        currentPlayer = 1;
- 
-     }
- 
-Index: app/src/main/res/layout/activity_main.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RelativeLayout\r\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".MainActivity\">\r\n\r\n    <LinearLayout\r\n        android:id=\"@+id/centerPile\"\r\n        android:layout_width=\"300dp\"\r\n        android:layout_height=\"100dp\"\r\n        android:layout_centerInParent=\"false\"\r\n        android:layout_centerHorizontal=\"true\"\r\n        android:layout_marginTop=\"200dp\"\r\n        android:orientation=\"horizontal\"\r\n        android:weightSum=\"10\">\r\n\r\n        <ImageView\r\n            android:id=\"@+id/iv_deck\"\r\n            android:layout_width=\"100dp\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_weight=\"1\"\r\n            android:scaleType=\"centerInside\"\r\n            android:src=\"@drawable/back_card\" />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/imageView2\"\r\n            android:layout_width=\"100dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_weight=\"1\"\r\n            app:srcCompat=\"@drawable/back_card\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/cardPlay\"\r\n            android:layout_width=\"100dp\"\r\n            android:layout_height=\"100dp\"\r\n            android:layout_weight=\"1\"\r\n            android:gravity=\"center\"\r\n            android:text=\"x1\"\r\n            android:textSize=\"20sp\" />\r\n\r\n\r\n    </LinearLayout>\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"900dp\"\r\n        android:id=\"@+id/lay\"\r\n        android:layout_alignParentBottom=\"true\"\r\n        android:layout_centerHorizontal=\"true\"\r\n        android:weightSum=\"13\"\r\n        android:orientation=\"horizontal\"\r\n        android:layout_height=\"150dp\">\r\n\r\n        <ImageView\r\n            android:id=\"@+id/iv_card1\"\r\n            android:layout_weight= \"1\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:scaleType=\"centerInside\"\r\n            android:src=\"@drawable/back_card\"\r\n            />\r\n        <ImageView\r\n            android:id=\"@+id/iv_card2\"\r\n            android:layout_weight= \"1\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:scaleType=\"centerInside\"\r\n            android:src=\"@drawable/back_card\"\r\n            />\r\n        <ImageView\r\n            android:id=\"@+id/iv_card3\"\r\n            android:layout_weight= \"1\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:scaleType=\"centerInside\"\r\n            android:src=\"@drawable/back_card\"\r\n            />\r\n        <ImageView\r\n            android:id=\"@+id/iv_card4\"\r\n            android:layout_weight= \"1\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:scaleType=\"centerInside\"\r\n            android:src=\"@drawable/back_card\"\r\n            />\r\n        <ImageView\r\n            android:id=\"@+id/iv_card5\"\r\n            android:layout_weight= \"1\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:scaleType=\"centerInside\"\r\n            android:src=\"@drawable/back_card\"\r\n            />\r\n        <ImageView\r\n            android:id=\"@+id/iv_card6\"\r\n            android:layout_weight= \"1\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:scaleType=\"centerInside\"\r\n            android:src=\"@drawable/back_card\"\r\n            />\r\n        <ImageView\r\n            android:id=\"@+id/iv_card7\"\r\n            android:layout_weight= \"1\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:scaleType=\"centerInside\"\r\n            android:src=\"@drawable/back_card\"\r\n            />\r\n        <ImageView\r\n            android:id=\"@+id/iv_card8\"\r\n            android:layout_weight= \"1\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:scaleType=\"centerInside\"\r\n            android:src=\"@drawable/back_card\"\r\n            />\r\n        <ImageView\r\n            android:id=\"@+id/iv_card9\"\r\n            android:layout_weight= \"1\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:scaleType=\"centerInside\"\r\n            android:src=\"@drawable/back_card\"\r\n            />\r\n        <ImageView\r\n            android:id=\"@+id/iv_card10\"\r\n            android:layout_weight= \"1\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:scaleType=\"centerInside\"\r\n            android:src=\"@drawable/back_card\"\r\n            />\r\n        <ImageView\r\n            android:id=\"@+id/iv_card11\"\r\n            android:layout_weight= \"1\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:scaleType=\"centerInside\"\r\n            android:src=\"@drawable/back_card\"\r\n            />\r\n        <ImageView\r\n            android:id=\"@+id/iv_card12\"\r\n            android:layout_weight= \"1\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:scaleType=\"centerInside\"\r\n            android:src=\"@drawable/back_card\"\r\n            />\r\n        <ImageView\r\n            android:id=\"@+id/iv_card13\"\r\n            android:layout_weight= \"1\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:scaleType=\"centerInside\"\r\n            android:src=\"@drawable/back_card\"\r\n            />\r\n\r\n    </LinearLayout>\r\n\r\n    <LinearLayout\r\n        android:id=\"@+id/pass\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"100dp\"\r\n        android:layout_alignParentEnd=\"true\"\r\n        android:layout_alignParentRight=\"true\"\r\n        android:layout_alignParentBottom=\"true\"\r\n        android:layout_marginStart=\"150dp\"\r\n        android:layout_marginLeft=\"150dp\"\r\n        android:layout_marginEnd=\"150dp\"\r\n        android:layout_marginRight=\"150dp\"\r\n        android:layout_marginBottom=\"125dp\"\r\n        android:orientation=\"horizontal\"\r\n        android:weightSum=\"13\">\r\n\r\n        <Button\r\n            android:id=\"@+id/placeCards\"\r\n            android:layout_width=\"116dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_weight=\"1\"\r\n            android:text=\"PLAY\" />\r\n\r\n        <Button\r\n            android:id=\"@+id/passButton\"\r\n            android:layout_width=\"116dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_gravity=\"right\"\r\n            android:layout_weight=\"1\"\r\n            android:text=\"PASS\" />\r\n\r\n    </LinearLayout>\r\n\r\n    <LinearLayout\r\n        android:id=\"@+id/pause\"\r\n        android:layout_width=\"250dp\"\r\n        android:layout_height=\"100dp\"\r\n        android:layout_alignParentTop=\"true\"\r\n        android:layout_alignParentRight=\"true\"\r\n        android:orientation=\"horizontal\"\r\n        android:weightSum=\"13\">\r\n\r\n        <Button\r\n            android:id=\"@+id/pauseButton\"\r\n            android:layout_width=\"50dp\"\r\n            android:layout_height=\"70dp\"\r\n            android:layout_weight=\"1\"\r\n            android:text=\"I I\"\r\n            android:textSize=\"20dp\" />\r\n\r\n    </LinearLayout>\r\n\r\n\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"700dp\"\r\n        android:id=\"@+id/playerAcross\"\r\n        android:layout_height=\"100dp\"\r\n        android:layout_centerHorizontal=\"true\"\r\n        android:orientation=\"horizontal\"\r\n        android:weightSum=\"13\">\r\n\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerAcross1\"\r\n            android:layout_weight= \"1\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:scaleType=\"centerInside\"\r\n            android:src=\"@drawable/back_card\"\r\n            />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerAcross2\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_weight=\"1\"\r\n            android:scaleType=\"centerInside\"\r\n            android:src=\"@drawable/back_card\" />\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerAcross3\"\r\n            android:layout_weight= \"1\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:scaleType=\"centerInside\"\r\n            android:src=\"@drawable/back_card\"\r\n            />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerAcross4\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_weight=\"1\"\r\n            android:scaleType=\"centerInside\"\r\n            android:src=\"@drawable/back_card\" />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerAcross5\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_weight=\"1\"\r\n            android:scaleType=\"centerInside\"\r\n            android:src=\"@drawable/back_card\" />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerAcross6\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_weight=\"1\"\r\n            android:scaleType=\"centerInside\"\r\n            android:src=\"@drawable/back_card\" />\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerAcross7\"\r\n            android:layout_weight= \"1\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:scaleType=\"centerInside\"\r\n            android:src=\"@drawable/back_card\"\r\n            />\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerAcross8\"\r\n            android:layout_weight= \"1\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:scaleType=\"centerInside\"\r\n            android:src=\"@drawable/back_card\"\r\n            />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerAcross9\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_weight=\"1\"\r\n            android:scaleType=\"centerInside\"\r\n            android:src=\"@drawable/back_card\" />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerAcross10\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_weight=\"1\"\r\n            android:scaleType=\"centerInside\"\r\n            android:src=\"@drawable/back_card\" />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerAcross11\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_weight=\"1\"\r\n            android:scaleType=\"centerInside\"\r\n            android:src=\"@drawable/back_card\" />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerAcross12\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_weight=\"1\"\r\n            android:scaleType=\"centerInside\"\r\n            android:src=\"@drawable/back_card\" />\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerAcross13\"\r\n            android:layout_weight= \"1\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:scaleType=\"centerInside\"\r\n            android:src=\"@drawable/back_card\"\r\n            />\r\n    </LinearLayout>\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"100dp\"\r\n        android:id=\"@+id/playerLeft\"\r\n        android:layout_height=\"600dp\"\r\n        android:layout_centerVertical=\"true\"\r\n        android:orientation=\"vertical\"\r\n        android:weightSum=\"13\">\r\n\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerLeft1\"\r\n            android:layout_weight= \"1\"\r\n            android:orientation=\"vertical\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:scaleType=\"centerInside\"\r\n            android:rotation=\"270\"\r\n            android:src=\"@drawable/back_card\"\r\n            />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerLeft2\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_weight=\"1\"\r\n            android:scaleType=\"centerInside\"\r\n            android:rotation=\"270\"\r\n            android:src=\"@drawable/back_card\" />\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerLeft3\"\r\n            android:layout_weight= \"1\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:scaleType=\"centerInside\"\r\n            android:rotation=\"270\"\r\n            android:src=\"@drawable/back_card\"\r\n            />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerLeft4\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_weight=\"1\"\r\n            android:scaleType=\"centerInside\"\r\n            android:rotation=\"270\"\r\n            android:src=\"@drawable/back_card\" />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerLeft5\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_weight=\"1\"\r\n            android:scaleType=\"centerInside\"\r\n            android:rotation=\"270\"\r\n            android:src=\"@drawable/back_card\" />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerLeft6\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_weight=\"1\"\r\n            android:scaleType=\"centerInside\"\r\n            android:rotation=\"270\"\r\n            android:src=\"@drawable/back_card\" />\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerLeft7\"\r\n            android:layout_weight= \"1\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:scaleType=\"centerInside\"\r\n            android:rotation=\"270\"\r\n            android:src=\"@drawable/back_card\"\r\n            />\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerLeft8\"\r\n            android:layout_weight= \"1\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:scaleType=\"centerInside\"\r\n            android:rotation=\"270\"\r\n            android:src=\"@drawable/back_card\"\r\n            />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerLeft9\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_weight=\"1\"\r\n            android:scaleType=\"centerInside\"\r\n            android:rotation=\"270\"\r\n            android:src=\"@drawable/back_card\" />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerLeft10\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_weight=\"1\"\r\n            android:scaleType=\"centerInside\"\r\n            android:rotation=\"270\"\r\n            android:src=\"@drawable/back_card\" />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerLeft11\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_weight=\"1\"\r\n            android:scaleType=\"centerInside\"\r\n            android:rotation=\"270\"\r\n            android:src=\"@drawable/back_card\" />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerLeft12\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_weight=\"1\"\r\n            android:scaleType=\"centerInside\"\r\n            android:rotation=\"270\"\r\n            android:src=\"@drawable/back_card\" />\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerLeft13\"\r\n            android:layout_weight= \"1\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:scaleType=\"centerInside\"\r\n            android:rotation=\"270\"\r\n            android:src=\"@drawable/back_card\"\r\n            />\r\n\r\n    </LinearLayout>\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"100dp\"\r\n        android:id=\"@+id/playerRight\"\r\n        android:layout_height=\"600dp\"\r\n        android:layout_centerVertical=\"true\"\r\n        android:layout_marginLeft=\"1180dp\"\r\n        android:orientation=\"vertical\"\r\n        android:weightSum=\"13\">\r\n\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerRight1\"\r\n            android:layout_weight= \"1\"\r\n            android:orientation=\"vertical\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:scaleType=\"centerInside\"\r\n            android:rotation=\"270\"\r\n            android:src=\"@drawable/back_card\"\r\n            />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerRight2\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_weight=\"1\"\r\n            android:scaleType=\"centerInside\"\r\n            android:rotation=\"270\"\r\n            android:src=\"@drawable/back_card\" />\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerRight3\"\r\n            android:layout_weight= \"1\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:scaleType=\"centerInside\"\r\n            android:rotation=\"270\"\r\n            android:src=\"@drawable/back_card\"\r\n            />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerRight4\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_weight=\"1\"\r\n            android:scaleType=\"centerInside\"\r\n            android:rotation=\"270\"\r\n            android:src=\"@drawable/back_card\" />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerRight5\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_weight=\"1\"\r\n            android:scaleType=\"centerInside\"\r\n            android:rotation=\"270\"\r\n            android:src=\"@drawable/back_card\" />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerRight6\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_weight=\"1\"\r\n            android:scaleType=\"centerInside\"\r\n            android:rotation=\"270\"\r\n            android:src=\"@drawable/back_card\" />\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerRight7\"\r\n            android:layout_weight= \"1\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:scaleType=\"centerInside\"\r\n            android:rotation=\"270\"\r\n            android:src=\"@drawable/back_card\"\r\n            />\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerRight8\"\r\n            android:layout_weight= \"1\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:scaleType=\"centerInside\"\r\n            android:rotation=\"270\"\r\n            android:src=\"@drawable/back_card\"\r\n            />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerRight9\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_weight=\"1\"\r\n            android:scaleType=\"centerInside\"\r\n            android:rotation=\"270\"\r\n            android:src=\"@drawable/back_card\" />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerRight10\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_weight=\"1\"\r\n            android:scaleType=\"centerInside\"\r\n            android:rotation=\"270\"\r\n            android:src=\"@drawable/back_card\" />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerRight11\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_weight=\"1\"\r\n            android:scaleType=\"centerInside\"\r\n            android:rotation=\"270\"\r\n            android:src=\"@drawable/back_card\" />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerRight12\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_weight=\"1\"\r\n            android:scaleType=\"centerInside\"\r\n            android:rotation=\"270\"\r\n            android:src=\"@drawable/back_card\" />\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerRight13\"\r\n            android:layout_weight= \"1\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:scaleType=\"centerInside\"\r\n            android:rotation=\"270\"\r\n            android:src=\"@drawable/back_card\"\r\n            />\r\n\r\n    </LinearLayout>\r\n\r\n\r\n</RelativeLayout>\r\n\r\n\r\n\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/res/layout/activity_main.xml b/app/src/main/res/layout/activity_main.xml
---- a/app/src/main/res/layout/activity_main.xml	(revision 38d2a175f6ea503e23ff0b520259900f929e54af)
-+++ b/app/src/main/res/layout/activity_main.xml	(date 1680193597564)
-@@ -109,14 +109,14 @@
-             android:scaleType="centerInside"
-             android:src="@drawable/back_card"
-             />
-+
-         <ImageView
-             android:id="@+id/iv_card8"
--            android:layout_weight= "1"
-             android:layout_width="match_parent"
-             android:layout_height="match_parent"
-+            android:layout_weight="1"
-             android:scaleType="centerInside"
--            android:src="@drawable/back_card"
--            />
-+            android:src="@drawable/back_card" />
-         <ImageView
-             android:id="@+id/iv_card9"
-             android:layout_weight= "1"
-@@ -182,6 +182,11 @@
-             android:layout_weight="1"
-             android:text="PLAY" />
- 
-+        <Space
-+            android:layout_width="wrap_content"
-+            android:layout_height="wrap_content"
-+            android:layout_weight="1" />
-+
-         <Button
-             android:id="@+id/passButton"
-             android:layout_width="116dp"
-Index: app/src/main/java/com/example/president/MainActivity.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.president;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.media.Image;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.widget.ImageView;\r\n\r\nimport com.example.GameFramework.GameMainActivity;\r\nimport com.example.GameFramework.LocalGame;\r\nimport com.example.GameFramework.gameConfiguration.GameConfig;\r\nimport com.example.GameFramework.infoMessage.GameState;\r\n\r\nimport java.util.Collection;\r\nimport java.util.Collections;\r\n\r\npublic class MainActivity extends GameMainActivity {\r\n\r\n    private static final int PORT_NUMBER = 3384;\r\n\r\n\r\n    @Override\r\n    public GameConfig createDefaultConfig() {\r\n        return null;\r\n    }\r\n\r\n    @Override\r\n    public LocalGame createLocalGame(GameState gameState) {\r\n        return null;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/president/MainActivity.java b/app/src/main/java/com/example/president/MainActivity.java
---- a/app/src/main/java/com/example/president/MainActivity.java	(revision 38d2a175f6ea503e23ff0b520259900f929e54af)
-+++ b/app/src/main/java/com/example/president/MainActivity.java	(date 1680192761607)
-@@ -3,9 +3,11 @@
- import androidx.appcompat.app.AppCompatActivity;
- 
- import android.annotation.SuppressLint;
-+import android.graphics.Color;
- import android.media.Image;
- import android.os.Bundle;
- import android.view.View;
-+import android.widget.Button;
- import android.widget.ImageView;
- 
- import com.example.GameFramework.GameMainActivity;
-@@ -16,23 +18,31 @@
- import java.util.Collection;
- import java.util.Collections;
- 
--public class MainActivity extends GameMainActivity {
-+public class MainActivity extends AppCompatActivity {
-+    Cards cardClass = new Cards();
-+    ImageView iv_deck, iv_card1, iv_card2, iv_card3, iv_card4, iv_card5, iv_card6, iv_card7, iv_card8, iv_card9, iv_card10, iv_card11, iv_card12, iv_card13;
- 
--    private static final int PORT_NUMBER = 3384;
-+    PresidentGameState presidentGameState;
-+    Button placeCards = null;
- 
--
-+    @SuppressLint("MissingInflatedId")
-     @Override
--    public GameConfig createDefaultConfig() {
--        return null;
--    }
-+
-+    protected void onCreate(Bundle savedInstanceState) {
-+        super.onCreate(savedInstanceState);
-+        setContentView(R.layout.activity_main);
- 
-+        presidentGameState = new PresidentGameState();
-+        //placeCards = new Button (findViewById(R.id.placeCards));
-+        //placeCards.setBackgroundColor(Color.RED);
-+
-+        /*
-     @Override
-     public LocalGame createLocalGame(GameState gameState) {
-         return null;
-     }
- 
--
-+         */
- 
--
--
-+    }
- }
-\ No newline at end of file
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_3_23_2023_8_43_AM__Changes_.xml
-===================================================================
-diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_3_23_2023_8_43_AM__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_3_23_2023_8_43_AM__Changes_.xml
-deleted file mode 100644
---- a/.idea/shelf/Uncommitted_changes_before_Update_at_3_23_2023_8_43_AM__Changes_.xml	(revision 38d2a175f6ea503e23ff0b520259900f929e54af)
-+++ /dev/null	(revision 38d2a175f6ea503e23ff0b520259900f929e54af)
-@@ -1,4 +0,0 @@
--<changelist name="Uncommitted_changes_before_Update_at_3_23_2023_8_43_AM_[Changes]" date="1679586332510" recycled="true" deleted="true">
--  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_3_23_2023_8_43_AM_[Changes]/shelved.patch" />
--  <option name="DESCRIPTION" value="Uncommitted changes before Update at 3/23/2023 8:43 AM [Changes]" />
--</changelist>
-\ No newline at end of file
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_3_23_2023_8_43_AM_[Changes]/shelved.patch
-===================================================================
-diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_3_23_2023_8_43_AM_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_3_23_2023_8_43_AM_[Changes]/shelved.patch
-deleted file mode 100644
---- a/.idea/shelf/Uncommitted_changes_before_Update_at_3_23_2023_8_43_AM_[Changes]/shelved.patch	(revision 38d2a175f6ea503e23ff0b520259900f929e54af)
-+++ /dev/null	(revision 38d2a175f6ea503e23ff0b520259900f929e54af)
-@@ -1,48 +0,0 @@
--Index: .idea/misc.xml
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"ProjectRootManager\" version=\"2\" project-jdk-name=\"Android Studio default JDK\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/.idea/misc.xml b/.idea/misc.xml
----- a/.idea/misc.xml	(revision 9732ec641c1cbd2c1f293b9b47adb4117559d00f)
--+++ b/.idea/misc.xml	(date 1679533156386)
--@@ -1,7 +1,7 @@
-- <?xml version="1.0" encoding="UTF-8"?>
-- <project version="4">
--   <component name="ExternalStorageConfigurationManager" enabled="true" />
---  <component name="ProjectRootManager" version="2" project-jdk-name="Android Studio default JDK" project-jdk-type="JavaSDK">
--+  <component name="ProjectRootManager" version="2" languageLevel="JDK_11" default="true" project-jdk-name="Android Studio default JDK" project-jdk-type="JavaSDK">
--     <output url="file://$PROJECT_DIR$/build/classes" />
--   </component>
--   <component name="ProjectType">
--Index: .idea/gradle.xml
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"GradleSettings\">\r\n    <option name=\"linkedExternalProjectsSettings\">\r\n      <GradleProjectSettings>\r\n        <option name=\"testRunner\" value=\"GRADLE\" />\r\n        <option name=\"distributionType\" value=\"DEFAULT_WRAPPED\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n      </GradleProjectSettings>\r\n    </option>\r\n  </component>\r\n</project>
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/.idea/gradle.xml b/.idea/gradle.xml
----- a/.idea/gradle.xml	(revision 9732ec641c1cbd2c1f293b9b47adb4117559d00f)
--+++ b/.idea/gradle.xml	(date 1679533156409)
--@@ -1,11 +1,18 @@
-- <?xml version="1.0" encoding="UTF-8"?>
-- <project version="4">
--+  <component name="GradleMigrationSettings" migrationVersion="1" />
--   <component name="GradleSettings">
--     <option name="linkedExternalProjectsSettings">
--       <GradleProjectSettings>
--         <option name="testRunner" value="GRADLE" />
--         <option name="distributionType" value="DEFAULT_WRAPPED" />
--         <option name="externalProjectPath" value="$PROJECT_DIR$" />
--+        <option name="modules">
--+          <set>
--+            <option value="$PROJECT_DIR$" />
--+            <option value="$PROJECT_DIR$/app" />
--+          </set>
--+        </option>
--       </GradleProjectSettings>
--     </option>
--   </component>
-Index: app/src/main/java/com/example/president/PresidentUI.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/president/PresidentUI.java b/app/src/main/java/com/example/president/PresidentUI.java
-new file mode 100644
---- /dev/null	(date 1680193448554)
-+++ b/app/src/main/java/com/example/president/PresidentUI.java	(date 1680193448554)
-@@ -0,0 +1,37 @@
-+package com.example.president;
-+
-+import android.graphics.Color;
-+import android.widget.Button;
-+
-+public class PresidentUI {
-+
-+    PresidentGameState gameState;
-+    Button placeCards;
-+
-+    public PresidentUI(PresidentGameState gameState){
-+        this.gameState = gameState;
-+        placeCards.findViewById(R.id.placeCards);
-+    }
-+
-+    //temporary name
-+    public void updateCards(){
-+        //number of cards
-+        gameState.getPlayer1Cards();
-+        //array of player 1's cards
-+        gameState.getPlayer1Cards();
-+
-+        /*
-+        If displayed cards are in an array, I could set every card
-+        in display to the player's cards in array
-+         */
-+
-+        int player = gameState.currentPlayer - 1;
-+
-+        for (int i = 0; i < gameState.allPlayers[player].length; i++){
-+                //displayCards[i] = gameState.allPlayers[player][i];
-+        }
-+
-+        //Current player and individual player cards are different
-+        //Putting the players into an array would turn change easier
-+    }
-+}
Index: .idea/shelf/Uncommitted_changes_before_Update_at_3_31_2023_12_25_AM__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_3_31_2023_12_25_AM__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_3_31_2023_12_25_AM__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_3_31_2023_12_25_AM__Changes_.xml	(revision 7ab5241a9aa186f67cd8279d5e39b9306c55fc7c)
+++ /dev/null	(revision 7ab5241a9aa186f67cd8279d5e39b9306c55fc7c)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_3_31_2023_12_25_AM_[Changes]" date="1680247561143" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_3_31_2023_12_25_AM_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 3/31/2023 12:25 AM [Changes]" />
-</changelist>
\ No newline at end of file

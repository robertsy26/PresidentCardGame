Index: app/src/main/java/com/example/president/PresidentGameState.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.president;\r\n\r\nimport static com.example.GameFramework.utilities.Saving.SEPARATOR;\r\n\r\nimport com.example.GameFramework.gameConfiguration.GamePlayerType;\r\nimport com.example.GameFramework.infoMessage.GameState;\r\nimport com.example.GameFramework.players.GamePlayer;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\n\r\npublic class PresidentGameState extends GameState {\r\n    private int playerId; // the player\r\n    public List<Card> cards; //cards array\r\n    final int maxCardsHand = 13;\r\n    final int numCardsDeck = 52;\r\n    public int currentHand; //how many players the card has on his turn\r\n    public boolean isCardCorrect; //check if the card is playable\r\n    public boolean isCardVisible;\r\n    public boolean is3Spade; // dictates which player starts first\r\n    public int rankings; //numbers corresponds to a stage\r\n    // public Object card;\r\n    private int player1score;\r\n    private int player2score;\r\n    private int player3score;\r\n    private int player4score;\r\n\r\n    ArrayList <Integer> player1Cards = new ArrayList<Integer>();\r\n    ArrayList <Integer> player2Cards = new ArrayList<Integer>();\r\n    ArrayList <Integer> player3Cards = new ArrayList<Integer>();\r\n    ArrayList <Integer> player4Cards = new ArrayList<Integer>();\r\n\r\n    ArrayList <GamePlayerType> player = new ArrayList<GamePlayerType>();\r\n\r\n\r\n\r\n    public PresidentGameState() { // basic constructor intializing the variables\r\n        player1score = 0;\r\n        player2score = 0;\r\n        player3score = 0;\r\n        player4score = 0;\r\n        player.add(new GamePlayerType(\"Local Human Player\") {\r\n            @Override\r\n            public GamePlayer createPlayer(String name) {\r\n                return new HumanPlayer(name);\r\n            }\r\n        });\r\n\r\n        player.add(new GamePlayerType(\"Local Computer Player\") {\r\n            @Override\r\n            public GamePlayer createPlayer(String name) {\r\n                return new PresidentComputerPlayer(name);\r\n            }\r\n        });\r\n\r\n        player1Cards.clear();\r\n        player2Cards.clear();\r\n        player3Cards.clear();\r\n        player4Cards.clear();\r\n    }\r\n\r\n    public PresidentGameState(PresidentGameState president){ // copy costructor that makes deep copies\r\n        this.playerId = playerId;\r\n        // cards;\r\n        this.currentHand = president.currentHand;\r\n        this.isCardCorrect = president.isCardCorrect;\r\n        this.isCardVisible = president.isCardVisible;\r\n        this.is3Spade = president.is3Spade;\r\n        this.rankings = president.rankings;\r\n        this.player1score = president.getPlayer1score();\r\n        this.player2score = president.getPlayer2score();\r\n        this.player3score = president.getPlayer3score();\r\n        this.player4score = president.getPlayer4score();\r\n\r\n        // Object card;\r\n\r\n\r\n\r\n        //going through each indvisual index to make sure all the values are copied\r\n        this.cards = new ArrayList<>();\r\n        for (Card card : president.cards){\r\n            if(card.isVisibleToPlayer(playerId)){\r\n                cards.add(card.copy());\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    public class Player {\r\n        private int id; // players unique id\r\n        private String name; // name of player\r\n\r\n        public Player(int id, String name) { //intializing the variables\r\n            this.id = id;\r\n            this.name = name;\r\n        }\r\n\r\n        public Player(Player player) { //copy constructor making a deep copy\r\n            this.id = player.id;\r\n            this.name = player.name;\r\n        }\r\n\r\n        public Player copyForPlayer(int playerID) { // creates a copy of the current player\r\n            if (id == playerID) {\r\n                return new Player(this); //if the id doesn't match the given playerID,\r\n                // the method creates a new Player object with the same attributes as the current object\r\n            } else {\r\n                return new Player(id, \"BRO\"); // if id doesn't match the give playerID create new player object with deafult name\r\n            }\r\n        }\r\n\r\n        public int getId() { //retrieves ID\r\n            return id;\r\n        }\r\n\r\n        public String getName() { // retrieves name\r\n            return name;\r\n        }\r\n    }\r\n\r\n    public class Card{\r\n        private int number;\r\n        private String name;\r\n        private boolean visible;\r\n\r\n        public Card(int number, String name, boolean visible){ //basic constructor\r\n            this.number = number;\r\n            this.name = name;\r\n            this.visible = visible;\r\n        }\r\n        public Card(Card card){ // copy constructor creating deep copy\r\n            this.number = card.number;\r\n            this.name = card.name;\r\n            this.visible = card.visible;\r\n        }\r\n\r\n        public Card copy(){ //copy method\r\n            return new Card(this);\r\n        }\r\n\r\n        public boolean isVisibleToPlayer (int playerId){ //checks if cards should be shown\r\n            return true;\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public String toString() {\r\n        return this.playerId + SEPARATOR + this.currentHand + SEPARATOR + this.rankings + SEPARATOR +\r\n                this.maxCardsHand + SEPARATOR + this.numCardsDeck + SEPARATOR + this.cards + SEPARATOR +\r\n                this.is3Spade + SEPARATOR + this.isCardCorrect + SEPARATOR + this.isCardVisible;\r\n    }\r\n\r\n\r\n    //checks to see if card is legal to play\r\n    public boolean isLegal(int playersCardNum, int cardOnDeck, int numOfCardsSelected){\r\n        //2 has no rank and will clear the deck, so will always be legal and can't have more than 4 cards selected\r\n        if (playersCardNum == 2 || playersCardNum > cardOnDeck && numOfCardsSelected >= 4){\r\n            isCardCorrect = true;\r\n            updateHand(numOfCardsSelected);\r\n            return true; }\r\n        else{\r\n            isCardCorrect = false;\r\n            updateHand(numOfCardsSelected);\r\n            return false; }\r\n    }\r\n    //updates players hand when plays a card\r\n    public boolean updateHand(int numOfCardsSelected) {\r\n        if(numOfCardsSelected >= 1 ){ currentHand = currentHand - numOfCardsSelected;}\r\n        else{ currentHand = currentHand; }\r\n        return true;\r\n    }\r\n\r\n    //initializes list of players in Array\r\n    private Player player1;\r\n    private Player player2;\r\n    private Player player3;\r\n    private Player player4;\r\n\r\n    public List<Player> players = Arrays.asList(player1, player2, player3, player4);\r\n    Player currentPlayer = players.get(0);\r\n    //methods switches players\r\n    public void switchPlayer(Player currentPlayer)\r\n    {   //selects the next player from list that is after current and then restart with the first after the last\r\n        players.get((players.indexOf(currentPlayer) + 1) % players.size());\r\n    }\r\n    //checks if card is legal to play, then modifies game state to reflect player played a card\r\n    //updated users num of cards and switches players\r\n    public boolean playCard(int playerId, int cardOnDeck, int playersCardNum, int numOfCardsSelected, Player currentPlayer){\r\n        if(isLegal(playersCardNum, cardOnDeck, numOfCardsSelected)){\r\n            switchPlayer(currentPlayer);\r\n            return true; }\r\n        else{\r\n            switchPlayer(currentPlayer);\r\n            return false; }\r\n    }\r\n    //this case pass will always be legal so don't need to check, then reflects player passed by\r\n    // updated users num of cards and switches players\r\n    public boolean pass(int playerId, int numOfCardsSelected){\r\n        updateHand(numOfCardsSelected);\r\n        switchPlayer(currentPlayer);\r\n        return true;\r\n    }\r\n    //pause is always legal so don't need to check or do anything to game state\r\n    public boolean pause(int playerId){\r\n        return true;\r\n    }\r\n\r\n    public void setPlayer1score(int player1score) {\r\n        this.player1score = player1score;\r\n    }\r\n    public void setPlayer2score(int player2score) {\r\n        this.player1score = player2score;\r\n    }\r\n    public void setPlayer3score(int player3score) {\r\n        this.player1score = player3score;\r\n    }\r\n    public void setPlayer4score(int player4score) {\r\n        this.player1score = player4score;\r\n    }\r\n    public void setPlayerId(int id){\r\n        this.playerId = id;\r\n    }\r\n\r\n    public int getPlayer1score(){\r\n        return player1score;\r\n    }\r\n    public int getPlayer2score(){\r\n        return player2score;\r\n    }\r\n    public int getPlayer3score(){\r\n        return player3score;\r\n    }\r\n    public int getPlayer4score(){\r\n        return player4score;\r\n    }\r\n    public int getPlayerId() {return playerId;}\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/president/PresidentGameState.java b/app/src/main/java/com/example/president/PresidentGameState.java
--- a/app/src/main/java/com/example/president/PresidentGameState.java	(revision 915f9a0009f5ea8ed0c433b179387ba2c3d301b7)
+++ b/app/src/main/java/com/example/president/PresidentGameState.java	(date 1679964834066)
@@ -12,10 +12,10 @@
 
 public class PresidentGameState extends GameState {
     private int playerId; // the player
-    public List<Card> cards; //cards array
+    public List<Cards> cards; //cards array
     final int maxCardsHand = 13;
     final int numCardsDeck = 52;
-    public int currentHand; //how many players the card has on his turn
+    public int currentHand; //how many cards the player has on his turn
     public boolean isCardCorrect; //check if the card is playable
     public boolean isCardVisible;
     public boolean is3Spade; // dictates which player starts first
@@ -79,49 +79,11 @@
 
         //going through each indvisual index to make sure all the values are copied
         this.cards = new ArrayList<>();
-        for (Card card : president.cards){
+        for (Cards card : president.cards){
             if(card.isVisibleToPlayer(playerId)){
-                cards.add(card.copy());
+                card.add(card.copy());
             }
         }
-
-
-
-    }
-
-
-
-    public class Player {
-        private int id; // players unique id
-        private String name; // name of player
-
-        public Player(int id, String name) { //intializing the variables
-            this.id = id;
-            this.name = name;
-        }
-
-        public Player(Player player) { //copy constructor making a deep copy
-            this.id = player.id;
-            this.name = player.name;
-        }
-
-        public Player copyForPlayer(int playerID) { // creates a copy of the current player
-            if (id == playerID) {
-                return new Player(this); //if the id doesn't match the given playerID,
-                // the method creates a new Player object with the same attributes as the current object
-            } else {
-                return new Player(id, "BRO"); // if id doesn't match the give playerID create new player object with deafult name
-            }
-        }
-
-        public int getId() { //retrieves ID
-            return id;
-        }
-
-        public String getName() { // retrieves name
-            return name;
-        }
-    }
 
     public class Card{
         private int number;
@@ -139,13 +101,7 @@
             this.visible = card.visible;
         }
 
-        public Card copy(){ //copy method
-            return new Card(this);
-        }
 
-        public boolean isVisibleToPlayer (int playerId){ //checks if cards should be shown
-            return true;
-        }
     }
 
     @Override
Index: app/src/main/java/com/example/GameFramework/LocalGame.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.GameFramework;\r\n\r\nimport com.example.GameFramework.actionMessage.EndTurnAction;\r\nimport com.example.GameFramework.actionMessage.GameAction;\r\nimport com.example.GameFramework.actionMessage.GameOverAckAction;\r\nimport com.example.GameFramework.actionMessage.MyNameIsAction;\r\nimport com.example.GameFramework.actionMessage.ReadyAction;\r\nimport com.example.GameFramework.actionMessage.TimerAction;\r\nimport com.example.GameFramework.infoMessage.BindGameInfo;\r\nimport com.example.GameFramework.infoMessage.GameOverInfo;\r\nimport com.example.GameFramework.infoMessage.GameState;\r\nimport com.example.GameFramework.infoMessage.IllegalMoveInfo;\r\nimport com.example.GameFramework.infoMessage.NotYourTurnInfo;\r\nimport com.example.GameFramework.infoMessage.StartGameInfo;\r\nimport com.example.GameFramework.players.GamePlayer;\r\nimport com.example.GameFramework.utilities.GameTimer;\r\nimport com.example.GameFramework.utilities.Tickable;\r\nimport com.example.GameFramework.utilities.Logger;\r\n\r\nimport android.os.Handler;\r\nimport android.os.Looper;\r\nimport android.os.Message;\r\n\r\n/**\r\n * A class that knows how to play the game. The data in this class represent the\r\n * state of a game. The state represented by an instance of this class can be a\r\n * complete state (as might be used by the main game activity) or a partial\r\n * state as it would be seen from the perspective of an individual player.\r\n *\r\n * Each game has a unique state definition, so this abstract base class has\r\n * little inherent functionality.\r\n *\r\n * @author Steven R. Vegdahl\r\n * @author Andrew Nuxoll\r\n * @version July 2013\r\n */\r\npublic abstract class LocalGame implements Game, Tickable {\r\n    //Tag for logging\r\n    private static final String TAG = \"LocalGame\";\r\n\r\n    // the stage that the game is in\r\n    private GameStage gameStage = GameStage.BEFORE_GAME;\r\n\r\n    // the handler for the game's thread\r\n    private Handler myHandler;\r\n\r\n    // the players in the game, in order of  player number\r\n    protected GamePlayer[] players;\r\n\r\n    // whether the game's thread is running\r\n    private boolean running = false;\r\n\r\n    // the players' names, paralleling the 'players' array\r\n    protected String[] playerNames;\r\n    private int playerNameCount = 0; // number of players who have told us their name\r\n\r\n    // the players are ready to start\r\n    private boolean[] playersReady;\r\n    private int playerReadyCount = 0; // number of players who are ready to start the game\r\n\r\n    // the players which have acknowledged that the game is over\r\n    private boolean[] playersFinished;\r\n    private int playerFinishedCount = 0; // number of player who have so acknowledged\r\n\r\n    // this game's timer and timer action\r\n    private GameTimer myTimer = new GameTimer(this);\r\n\r\n    // the game's state\r\n    protected GameState state;\r\n\r\n    /**\r\n     * Returns the game's timer\r\n     *\r\n     * @return the game's timer\r\n     */\r\n    protected final GameTimer getTimer() {\r\n        return myTimer;\r\n    }\r\n\r\n    /**\r\n     * starts the game\r\n     *\r\n     * @param players\r\n     * \t\t\tthe list of players who are playing in the game\r\n     */\r\n    public void start(GamePlayer[] players) {\r\n        // if the game has already started, don't restart\r\n        if (this.players != null) return;\r\n\r\n        // create/store a copy of the player array\r\n        this.players = (GamePlayer[])players.clone();\r\n\r\n        // create an array for the players' names; these names will be\r\n        // filled during the initial message-protocol between the game\r\n        // and players\r\n        this.playerNames = new String[players.length];\r\n\r\n        // start the thread for this game\r\n        synchronized(this) {\r\n            // if already started, don't restart\r\n            if (running) return;\r\n            running = true; // mark as running\r\n\r\n            // create a thread that loops, waiting for actions;\r\n            // start the thread\r\n            Runnable runnable = new Runnable() {\r\n                public void run() {\r\n                    Looper.prepare();\r\n                    myHandler = new MyHandler(LocalGame.this);\r\n                    Looper.loop();\r\n                }\r\n            };\r\n            Thread thread = new Thread(runnable);\r\n            thread.setName(\"Local Game\");\r\n            thread.start();\r\n        }\r\n\r\n        // at this point the game is running, so set our game stage to be that of\r\n        // waiting for the players to tell us their names\r\n        gameStage = GameStage.WAITING_FOR_NAMES;\r\n\r\n        // start each player, telling them each who their game and playerID are\r\n        for (int i = 0; i < players.length; i++) {\r\n            players[i].start();\r\n            players[i].sendInfo(new BindGameInfo(this, i));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Notify the given player that its state has changed. This should involve sending\r\n     * a GameInfo object to the player. If the game is not a perfect-information game\r\n     * this method should remove any information from the game that the player is not\r\n     * allowed to know.\r\n     *\r\n     * @param p\r\n     * \t\t\tthe player to notify\r\n     */\r\n    protected abstract void sendUpdatedStateTo(GamePlayer p);\r\n\r\n\r\n    /**\r\n     * Notify all players that the game's state has changed. Typically this simply\r\n     * calls the 'notifyStateChanged' method for each player.\r\n     */\r\n    protected final void sendAllUpdatedState() {\r\n        for (GamePlayer p : players) {\r\n            sendUpdatedStateTo(p);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Determines the numeric player ID (0 through whatever) for the given player.\r\n     * @param p\r\n     * \t\t\tthe player whose player ID we want\r\n     * @return\r\n     * \t\t\tthe player's ID, or -1 if the player is not a player in this game\r\n     */\r\n    protected final int getPlayerIdx(GamePlayer p) {\r\n        for (int i = 0; i < players.length; i++) {\r\n            if (p == players[i]) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    /**\r\n     * Invoked whenever the game's thread receives a message (e.g., from a player\r\n     * or from a timer).\r\n     *\r\n     * @param msg\r\n     * \t\t\tthe message that was received\r\n     */\r\n    private void receiveMessage(Message msg) {\r\n        if (msg.obj instanceof GameAction) { // ignore if not GameAction\r\n            GameAction action = (GameAction)msg.obj;\r\n\r\n            // CASE 1: the game is at the stage where we we waiting for\r\n            // players to tell us their names. In this case, we expect\r\n            // a MyNameIsAction object. Once each player have told us its\r\n            // name, we move on to the next stage.\r\n\r\n            if (action instanceof MyNameIsAction &&\r\n                    gameStage == GameStage.WAITING_FOR_NAMES) {\r\n                MyNameIsAction mnis = (MyNameIsAction) action;\r\n                Logger.debugLog(TAG, \"received 'myNameIs' (\"+mnis.getName()+\")\");\r\n\r\n                // mark that player as having given us its name\r\n                int playerIdx = getPlayerIdx(mnis.getPlayer());\r\n                if (playerIdx >= 0 && playerNames[playerIdx] == null) {\r\n                    playerNames[playerIdx] = mnis.getName(); // store player name\r\n                    synchronized (this){\r\n                        playerNameCount++;\r\n                    }\r\n                }\r\n\r\n                // If all players have told us their name, then move onto the next\r\n                // game stage, and send a message to each player that the game is\r\n                // about to start\r\n                if (playerNameCount >= playerNames.length) {\r\n                    Logger.debugLog(TAG, \"broadcasting player names\");\r\n                    gameStage = GameStage.WAITING_FOR_READY;\r\n                    playersReady = new boolean[players.length]; // array to keep track of players responding\r\n                    for (GamePlayer p : players) {\r\n                        p.sendInfo(\r\n                                new StartGameInfo((String[])playerNames.clone()));\r\n                    }\r\n                }\r\n            }\r\n            else if (action instanceof ReadyAction &&\r\n                    gameStage == GameStage.WAITING_FOR_READY) {\r\n\r\n                // CASE 2: we have told all players that the game is about to start;\r\n                // we are now processing ReadyAction messages from each player to\r\n                // acknowledge this.\r\n                ReadyAction ra = (ReadyAction)action;\r\n\r\n                // mark the given player as being ready\r\n                int playerIdx = getPlayerIdx(ra.getPlayer());\r\n                Logger.debugLog(TAG, \"got 'ready' (\"+playerNames[playerIdx]+\")\");\r\n                if (playerIdx >= 0 && !playersReady[playerIdx]) {\r\n                    playersReady[playerIdx] = true;\r\n                    synchronized (this) {\r\n                        playerReadyCount++;\r\n                    }\r\n                }\r\n\r\n                // if all players are ready, set the game stage to \"during game\", and\r\n                // send each player the initial state\r\n                if (playerReadyCount >= playerNames.length) {\r\n                    //We initially set the stage to setup, however we are smart enough to know\r\n                    //If we have to actually perform a setup phase, so check for that and send out\r\n                    //info accordingly.\r\n                    gameStage = GameStage.SETUP_PHASE;\r\n                    if(this.state.getNumSetupTurns() == 0){ gameStage = GameStage.DURING_GAME;}\r\n                    Logger.log(TAG, \"Num of setup turns is \"+ this.state.getNumSetupTurns());\r\n                    Logger.debugLog(TAG, \"broadcasting initial state - setup phase\");\r\n                    // send each player the initial state of the game\r\n                    sendAllUpdatedState();\r\n                }\r\n            }\r\n            else if (action instanceof TimerAction && gameStage == GameStage.DURING_GAME) {\r\n\r\n                // CASE 3: it's during the game, and we get a timer action\r\n\r\n                // Only perform the \"tick\" if it was our timer; otherwise, just post the message\r\n                if (((TimerAction)action).getTimer() == myTimer) {\r\n                    this.timerTicked();\r\n                }\r\n                else {\r\n                    this.checkAndHandleAction(action);\r\n                }\r\n            }\r\n            else if (action instanceof GameAction && gameStage == GameStage.DURING_GAME) {\r\n\r\n                // CASE 4: it's during the game, and we get an action from a player\r\n                this.checkAndHandleAction(action);\r\n            }\r\n            //CASE 5: We are setup phase and we get an action from a player\r\n            else if (action instanceof GameAction && gameStage == GameStage.SETUP_PHASE) {\r\n                this.checkAndHandleAction(action);\r\n            }\r\n            else if (action instanceof GameOverAckAction && gameStage == GameStage.GAME_OVER) {\r\n\r\n                // CASE 6: the game is over, and we are waiting for each player to\r\n                // acknowledge this\r\n                int playerIdx = getPlayerIdx(action.getPlayer());\r\n                if (playerIdx >= 0 && !playersFinished[playerIdx]) {\r\n                    playersFinished[playerIdx] = true;\r\n                    synchronized (this) {\r\n                        playerFinishedCount++;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handles an action that is sent to the game, checking to ensure\r\n     * checkIfGameOver player is allowed to move, that the move is legal, etc.\r\n     *\r\n     * @param action\r\n     * \t\t\tthe action that was sent\r\n     */\r\n    private final void checkAndHandleAction(GameAction action) {\r\n\r\n        // get the player and player ID\r\n        GamePlayer player = action.getPlayer();\r\n        int playerId = getPlayerIdx(player);\r\n\r\n        // if the player is NOT a player who is presently allowed to\r\n        // move, send the player a message\r\n        if (!canMove(playerId)) {;\r\n            player.sendInfo(new NotYourTurnInfo());\r\n            return;\r\n        }\r\n\r\n        // attempt to make the move; if the move was not a legal one,\r\n        // send the player a message to that effect\r\n        if (!makeMove(action)) {\r\n            player.sendInfo(new IllegalMoveInfo());\r\n            sendUpdatedStateTo(player);\r\n            return;\r\n        }\r\n\r\n        //Logging the current game phase so we know what it is.\r\n        Logger.debugLog(\"Current GAMEPHASE\", \" \" + this.gameStage);\r\n\r\n        //The move was legal, and if we are in setup phase, and this is the last player in the list's\r\n        //turn then we need to increment the setup phase counter and update our phase accordingly.\r\n        if(this.gameStage == GameStage.SETUP_PHASE){\r\n            if((this.players.length-1 == playerId) && action instanceof EndTurnAction){\r\n                this.state.incCurrentSetupTurn();\r\n            }\r\n            if(this.state.getCurrentSetupTurn() >= this.state.getNumSetupTurns()){\r\n                this.gameStage = GameStage.DURING_GAME;\r\n            }\r\n        }\r\n\r\n        // The move was a legal one, so presumably the state of the game was\r\n        // changed. Send all players the updated state.\r\n        sendAllUpdatedState();\r\n\r\n        // determine whether there is a winner; if so, finish up the game\r\n        String overMsg = checkIfGameOver();\r\n        if (overMsg != null) {\r\n            finishUpGame(overMsg);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Tell whether the given player is allowed to make a move at the\r\n     * present point in the game.\r\n     *\r\n     * @param playerIdx\r\n     * \t\tthe player's player-number (ID)\r\n     * @return\r\n     * \t\ttrue iff the player is allowed to move\r\n     */\r\n    protected abstract boolean canMove(int playerIdx);\r\n\r\n    /**\r\n     * Check if the game is over. It is over, return a string that tells\r\n     * who the winner(s), if any, are. If the game is not over, return null;\r\n     *\r\n     * @return\r\n     * \t\t\ta message that tells who has won the game, or null if the\r\n     * \t\t\tgame is not over\r\n     */\r\n    protected abstract String checkIfGameOver();\r\n\r\n    /**\r\n     * Finishes up the game\r\n     *\r\n     * @param msg\r\n     * \t\t\tThe message that tells who, if anyone, won the game\r\n     */\r\n    private final void finishUpGame(String msg) {\r\n\r\n        // set the game-stage to \"over\"\r\n        gameStage = GameStage.GAME_OVER;\r\n\r\n        // set up the array and count so that we can keep track of\r\n        // whether everyone has replied\r\n        playersFinished = new boolean[players.length];\r\n        playerFinishedCount = 0;\r\n\r\n        // send all players a \"game over\" message\r\n        for (GamePlayer p : players) {\r\n            p.sendInfo(new GameOverInfo(msg));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Makes a move on behalf of a player.\r\n     *\r\n     * @param action\r\n     * \t\t\tThe move that the player has sent to the game\r\n     * @return\r\n     * \t\t\tTells whether the move was a legal one.\r\n     */\r\n    protected abstract boolean makeMove(GameAction action);\r\n\r\n    /**\r\n     * sends a given action to the Game object\r\n     *\r\n     * @param action\r\n     *            the action to send\r\n     */\r\n    public final void sendAction(GameAction action) {\r\n        // wait until handler is set\r\n        while (myHandler == null) Thread.yield();\r\n\r\n        // package the action into a message and send it to the handler\r\n        Message msg = new Message();\r\n        msg.obj = action;\r\n        myHandler.dispatchMessage(msg);\r\n    }\r\n\r\n    /**\r\n     * sends a timer action to the game\r\n     */\r\n    public final void tick(GameTimer timer) {\r\n        sendAction(new TimerAction(timer));\r\n    }\r\n\r\n    /**\r\n     * Invoked whenever the game's timer has ticked. It is expected\r\n     * that this will be overridden in many games.\r\n     */\r\n    protected void timerTicked() {\r\n        // default behavior is to do nothing\r\n    }\r\n\r\n    // an enum-class that itemizes the game stages\r\n    protected static enum GameStage {\r\n        BEFORE_GAME, WAITING_FOR_NAMES, WAITING_FOR_READY, DURING_GAME, GAME_OVER, SETUP_PHASE\r\n    }\r\n\r\n    // a handler class for the game's thread\r\n    private static class MyHandler extends Handler {\r\n        // the game\r\n        private LocalGame game;\r\n\r\n        // constructor; parameter is expected to be this game\r\n        public MyHandler(LocalGame game) {\r\n            this.game = game;\r\n        }\r\n\r\n        // callback when message is received; invoke the 'gameReceived' message\r\n        public void handleMessage(Message msg) {\r\n            game.receiveMessage(msg);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns whether or not we are in setup phase.\r\n     * @return\r\n     */\r\n    public boolean inSetupPhase(){\r\n        if(this.gameStage == GameStage.SETUP_PHASE){\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Returns the current setup turn number we are on.\r\n     * @return The turn number of setup we are on\r\n     */\r\n    public int setupTurnNumber(){\r\n        return this.state.getCurrentSetupTurn();\r\n    }\r\n\r\n    //TESTING\r\n\r\n    public GamePlayer[] getPlayers(){\r\n        return players;\r\n    }\r\n\r\n    /**\r\n     * returns the current gameState\r\n     *\r\n     * @return GameState\r\n     */\r\n    @Override\r\n    public GameState getGameState(){\r\n        return state;\r\n    }\r\n\r\n}// class LocalGame\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/GameFramework/LocalGame.java b/app/src/main/java/com/example/GameFramework/LocalGame.java
--- a/app/src/main/java/com/example/GameFramework/LocalGame.java	(revision 915f9a0009f5ea8ed0c433b179387ba2c3d301b7)
+++ b/app/src/main/java/com/example/GameFramework/LocalGame.java	(date 1679964834085)
@@ -16,6 +16,10 @@
 import com.example.GameFramework.utilities.GameTimer;
 import com.example.GameFramework.utilities.Tickable;
 import com.example.GameFramework.utilities.Logger;
+import com.example.president.PresidentComputerPlayer;
+import com.example.president.PresidentGameState;
+import com.example.president.PresidentPassAction;
+import com.example.president.PresidentPlaceAction;
 
 import android.os.Handler;
 import android.os.Looper;
@@ -68,6 +72,9 @@
     // the game's state
     protected GameState state;
 
+    // President Game State
+    private PresidentGameState gameState;
+
     /**
      * Returns the game's timer
      *
@@ -468,4 +475,19 @@
         return state;
     }
 
+    public boolean receiveInfo(GameAction action){
+        if (action instanceof PresidentPlaceAction){
+            PresidentPlaceAction placeAction = (PresidentPlaceAction) action;
+            if (placeAction.getPlayer() instanceof PresidentComputerPlayer){
+                //
+            }
+        } else if (action instanceof PresidentPassAction) {
+            //pass to next player
+        }
+        else{
+            return false;
+        }
+        return true;
+    }
+
 }// class LocalGame
Index: app/src/main/res/layout/activity_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RelativeLayout\r\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".MainActivity\">\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"200dp\"\r\n        android:id=\"@+id/centerPile\"\r\n        android:layout_height=\"100dp\"\r\n        android:layout_centerHorizontal=\"true\"\r\n        android:layout_centerVertical=\"true\"\r\n        android:orientation=\"horizontal\"\r\n        android:weightSum=\"10\">\r\n\r\n        <ImageView\r\n            android:id=\"@+id/iv_deck\"\r\n            android:layout_width=\"100dp\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_weight=\"1\"\r\n            android:scaleType=\"centerInside\"\r\n            android:src=\"@drawable/back_card\" />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/imageView2\"\r\n            android:layout_width=\"100dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_weight=\"1\"\r\n            app:srcCompat=\"@drawable/back_card\" />\r\n\r\n\r\n    </LinearLayout>\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"900dp\"\r\n        android:id=\"@+id/lay\"\r\n        android:layout_alignParentBottom=\"true\"\r\n        android:layout_centerHorizontal=\"true\"\r\n        android:weightSum=\"13\"\r\n        android:orientation=\"horizontal\"\r\n        android:layout_height=\"150dp\">\r\n\r\n        <ImageView\r\n            android:id=\"@+id/iv_card1\"\r\n            android:layout_weight= \"1\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:scaleType=\"centerInside\"\r\n            android:src=\"@drawable/back_card\"\r\n            />\r\n        <ImageView\r\n            android:id=\"@+id/iv_card2\"\r\n            android:layout_weight= \"1\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:scaleType=\"centerInside\"\r\n            android:src=\"@drawable/back_card\"\r\n            />\r\n        <ImageView\r\n            android:id=\"@+id/iv_card3\"\r\n            android:layout_weight= \"1\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:scaleType=\"centerInside\"\r\n            android:src=\"@drawable/back_card\"\r\n            />\r\n        <ImageView\r\n            android:id=\"@+id/iv_card4\"\r\n            android:layout_weight= \"1\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:scaleType=\"centerInside\"\r\n            android:src=\"@drawable/back_card\"\r\n            />\r\n        <ImageView\r\n            android:id=\"@+id/iv_card5\"\r\n            android:layout_weight= \"1\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:scaleType=\"centerInside\"\r\n            android:src=\"@drawable/back_card\"\r\n            />\r\n        <ImageView\r\n            android:id=\"@+id/iv_card6\"\r\n            android:layout_weight= \"1\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:scaleType=\"centerInside\"\r\n            android:src=\"@drawable/back_card\"\r\n            />\r\n        <ImageView\r\n            android:id=\"@+id/iv_card7\"\r\n            android:layout_weight= \"1\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:scaleType=\"centerInside\"\r\n            android:src=\"@drawable/back_card\"\r\n            />\r\n        <ImageView\r\n            android:id=\"@+id/iv_card8\"\r\n            android:layout_weight= \"1\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:scaleType=\"centerInside\"\r\n            android:src=\"@drawable/back_card\"\r\n            />\r\n        <ImageView\r\n            android:id=\"@+id/iv_card9\"\r\n            android:layout_weight= \"1\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:scaleType=\"centerInside\"\r\n            android:src=\"@drawable/back_card\"\r\n            />\r\n        <ImageView\r\n            android:id=\"@+id/iv_card10\"\r\n            android:layout_weight= \"1\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:scaleType=\"centerInside\"\r\n            android:src=\"@drawable/back_card\"\r\n            />\r\n        <ImageView\r\n            android:id=\"@+id/iv_card11\"\r\n            android:layout_weight= \"1\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:scaleType=\"centerInside\"\r\n            android:src=\"@drawable/back_card\"\r\n            />\r\n        <ImageView\r\n            android:id=\"@+id/iv_card12\"\r\n            android:layout_weight= \"1\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:scaleType=\"centerInside\"\r\n            android:src=\"@drawable/back_card\"\r\n            />\r\n        <ImageView\r\n            android:id=\"@+id/iv_card13\"\r\n            android:layout_weight= \"1\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:scaleType=\"centerInside\"\r\n            android:src=\"@drawable/back_card\"\r\n            />\r\n\r\n    </LinearLayout>\r\n\r\n    <LinearLayout\r\n        android:id=\"@+id/pass\"\r\n        android:layout_width=\"116dp\"\r\n        android:layout_height=\"100dp\"\r\n        android:layout_alignParentEnd=\"true\"\r\n        android:layout_alignParentRight=\"true\"\r\n        android:layout_alignParentBottom=\"true\"\r\n        android:layout_marginEnd=\"56dp\"\r\n        android:layout_marginRight=\"56dp\"\r\n        android:layout_marginBottom=\"-13dp\"\r\n        android:orientation=\"horizontal\"\r\n        android:weightSum=\"13\">\r\n\r\n        <Button\r\n            android:id=\"@+id/passButtton\"\r\n            android:layout_width=\"116dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_weight=\"1\"\r\n            android:text=\"PASS\" />\r\n\r\n    </LinearLayout>\r\n\r\n    <LinearLayout\r\n        android:id=\"@+id/pause\"\r\n        android:layout_width=\"116dp\"\r\n        android:layout_height=\"100dp\"\r\n        android:layout_alignParentRight=\"true\"\r\n        android:layout_alignParentTop=\"true\"\r\n        android:orientation=\"horizontal\"\r\n        android:weightSum=\"13\">\r\n\r\n        <Button\r\n            android:id=\"@+id/pauseButtton\"\r\n            android:layout_width=\"50dp\"\r\n            android:layout_height=\"70dp\"\r\n            android:layout_weight=\"1\"\r\n            android:text=\"I I\"\r\n            android:textSize=\"20dp\" />\r\n\r\n    </LinearLayout>\r\n\r\n\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"700dp\"\r\n        android:id=\"@+id/playerAcross\"\r\n        android:layout_height=\"100dp\"\r\n        android:layout_centerHorizontal=\"true\"\r\n        android:orientation=\"horizontal\"\r\n        android:weightSum=\"13\">\r\n\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerAcross1\"\r\n            android:layout_weight= \"1\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:scaleType=\"centerInside\"\r\n            android:src=\"@drawable/back_card\"\r\n            />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerAcross2\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_weight=\"1\"\r\n            android:scaleType=\"centerInside\"\r\n            android:src=\"@drawable/back_card\" />\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerAcross3\"\r\n            android:layout_weight= \"1\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:scaleType=\"centerInside\"\r\n            android:src=\"@drawable/back_card\"\r\n            />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerAcross4\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_weight=\"1\"\r\n            android:scaleType=\"centerInside\"\r\n            android:src=\"@drawable/back_card\" />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerAcross5\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_weight=\"1\"\r\n            android:scaleType=\"centerInside\"\r\n            android:src=\"@drawable/back_card\" />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerAcross6\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_weight=\"1\"\r\n            android:scaleType=\"centerInside\"\r\n            android:src=\"@drawable/back_card\" />\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerAcross7\"\r\n            android:layout_weight= \"1\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:scaleType=\"centerInside\"\r\n            android:src=\"@drawable/back_card\"\r\n            />\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerAcross8\"\r\n            android:layout_weight= \"1\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:scaleType=\"centerInside\"\r\n            android:src=\"@drawable/back_card\"\r\n            />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerAcross9\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_weight=\"1\"\r\n            android:scaleType=\"centerInside\"\r\n            android:src=\"@drawable/back_card\" />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerAcross10\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_weight=\"1\"\r\n            android:scaleType=\"centerInside\"\r\n            android:src=\"@drawable/back_card\" />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerAcross11\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_weight=\"1\"\r\n            android:scaleType=\"centerInside\"\r\n            android:src=\"@drawable/back_card\" />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerAcross12\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_weight=\"1\"\r\n            android:scaleType=\"centerInside\"\r\n            android:src=\"@drawable/back_card\" />\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerAcross13\"\r\n            android:layout_weight= \"1\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:scaleType=\"centerInside\"\r\n            android:src=\"@drawable/back_card\"\r\n            />\r\n    </LinearLayout>\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"100dp\"\r\n        android:id=\"@+id/playerLeft\"\r\n        android:layout_height=\"600dp\"\r\n        android:layout_centerVertical=\"true\"\r\n        android:orientation=\"vertical\"\r\n        android:weightSum=\"13\">\r\n\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerLeft1\"\r\n            android:layout_weight= \"1\"\r\n            android:orientation=\"vertical\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:scaleType=\"centerInside\"\r\n            android:rotation=\"270\"\r\n            android:src=\"@drawable/back_card\"\r\n            />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerLeft2\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_weight=\"1\"\r\n            android:scaleType=\"centerInside\"\r\n            android:rotation=\"270\"\r\n            android:src=\"@drawable/back_card\" />\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerLeft3\"\r\n            android:layout_weight= \"1\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:scaleType=\"centerInside\"\r\n            android:rotation=\"270\"\r\n            android:src=\"@drawable/back_card\"\r\n            />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerLeft4\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_weight=\"1\"\r\n            android:scaleType=\"centerInside\"\r\n            android:rotation=\"270\"\r\n            android:src=\"@drawable/back_card\" />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerLeft5\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_weight=\"1\"\r\n            android:scaleType=\"centerInside\"\r\n            android:rotation=\"270\"\r\n            android:src=\"@drawable/back_card\" />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerLeft6\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_weight=\"1\"\r\n            android:scaleType=\"centerInside\"\r\n            android:rotation=\"270\"\r\n            android:src=\"@drawable/back_card\" />\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerLeft7\"\r\n            android:layout_weight= \"1\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:scaleType=\"centerInside\"\r\n            android:rotation=\"270\"\r\n            android:src=\"@drawable/back_card\"\r\n            />\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerLeft8\"\r\n            android:layout_weight= \"1\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:scaleType=\"centerInside\"\r\n            android:rotation=\"270\"\r\n            android:src=\"@drawable/back_card\"\r\n            />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerLeft9\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_weight=\"1\"\r\n            android:scaleType=\"centerInside\"\r\n            android:rotation=\"270\"\r\n            android:src=\"@drawable/back_card\" />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerLeft10\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_weight=\"1\"\r\n            android:scaleType=\"centerInside\"\r\n            android:rotation=\"270\"\r\n            android:src=\"@drawable/back_card\" />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerLeft11\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_weight=\"1\"\r\n            android:scaleType=\"centerInside\"\r\n            android:rotation=\"270\"\r\n            android:src=\"@drawable/back_card\" />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerLeft12\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_weight=\"1\"\r\n            android:scaleType=\"centerInside\"\r\n            android:rotation=\"270\"\r\n            android:src=\"@drawable/back_card\" />\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerLeft13\"\r\n            android:layout_weight= \"1\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:scaleType=\"centerInside\"\r\n            android:rotation=\"270\"\r\n            android:src=\"@drawable/back_card\"\r\n            />\r\n\r\n    </LinearLayout>\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"100dp\"\r\n        android:id=\"@+id/playerRight\"\r\n        android:layout_height=\"600dp\"\r\n        android:layout_centerVertical=\"true\"\r\n        android:layout_marginLeft=\"1180dp\"\r\n        android:orientation=\"vertical\"\r\n        android:weightSum=\"13\">\r\n\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerRight1\"\r\n            android:layout_weight= \"1\"\r\n            android:orientation=\"vertical\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:scaleType=\"centerInside\"\r\n            android:rotation=\"270\"\r\n            android:src=\"@drawable/back_card\"\r\n            />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerRight2\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_weight=\"1\"\r\n            android:scaleType=\"centerInside\"\r\n            android:rotation=\"270\"\r\n            android:src=\"@drawable/back_card\" />\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerRight3\"\r\n            android:layout_weight= \"1\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:scaleType=\"centerInside\"\r\n            android:rotation=\"270\"\r\n            android:src=\"@drawable/back_card\"\r\n            />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerRight4\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_weight=\"1\"\r\n            android:scaleType=\"centerInside\"\r\n            android:rotation=\"270\"\r\n            android:src=\"@drawable/back_card\" />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerRight5\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_weight=\"1\"\r\n            android:scaleType=\"centerInside\"\r\n            android:rotation=\"270\"\r\n            android:src=\"@drawable/back_card\" />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerRight6\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_weight=\"1\"\r\n            android:scaleType=\"centerInside\"\r\n            android:rotation=\"270\"\r\n            android:src=\"@drawable/back_card\" />\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerRight7\"\r\n            android:layout_weight= \"1\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:scaleType=\"centerInside\"\r\n            android:rotation=\"270\"\r\n            android:src=\"@drawable/back_card\"\r\n            />\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerRight8\"\r\n            android:layout_weight= \"1\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:scaleType=\"centerInside\"\r\n            android:rotation=\"270\"\r\n            android:src=\"@drawable/back_card\"\r\n            />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerRight9\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_weight=\"1\"\r\n            android:scaleType=\"centerInside\"\r\n            android:rotation=\"270\"\r\n            android:src=\"@drawable/back_card\" />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerRight10\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_weight=\"1\"\r\n            android:scaleType=\"centerInside\"\r\n            android:rotation=\"270\"\r\n            android:src=\"@drawable/back_card\" />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerRight11\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_weight=\"1\"\r\n            android:scaleType=\"centerInside\"\r\n            android:rotation=\"270\"\r\n            android:src=\"@drawable/back_card\" />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerRight12\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_weight=\"1\"\r\n            android:scaleType=\"centerInside\"\r\n            android:rotation=\"270\"\r\n            android:src=\"@drawable/back_card\" />\r\n        <ImageView\r\n            android:id=\"@+id/iv_playerRight13\"\r\n            android:layout_weight= \"1\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:scaleType=\"centerInside\"\r\n            android:rotation=\"270\"\r\n            android:src=\"@drawable/back_card\"\r\n            />\r\n\r\n    </LinearLayout>\r\n\r\n\r\n</RelativeLayout>\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_main.xml b/app/src/main/res/layout/activity_main.xml
--- a/app/src/main/res/layout/activity_main.xml	(revision 915f9a0009f5ea8ed0c433b179387ba2c3d301b7)
+++ b/app/src/main/res/layout/activity_main.xml	(date 1679964834099)
@@ -8,11 +8,12 @@
     tools:context=".MainActivity">
 
     <LinearLayout
-        android:layout_width="200dp"
         android:id="@+id/centerPile"
+        android:layout_width="300dp"
         android:layout_height="100dp"
+        android:layout_centerInParent="false"
         android:layout_centerHorizontal="true"
-        android:layout_centerVertical="true"
+        android:layout_marginTop="200dp"
         android:orientation="horizontal"
         android:weightSum="10">
 
@@ -31,6 +32,15 @@
             android:layout_weight="1"
             app:srcCompat="@drawable/back_card" />
 
+        <TextView
+            android:id="@+id/cardPlay"
+            android:layout_width="100dp"
+            android:layout_height="100dp"
+            android:layout_weight="1"
+            android:gravity="center"
+            android:text="x1"
+            android:textSize="20sp" />
+
 
     </LinearLayout>
 
@@ -152,21 +162,31 @@
 
     <LinearLayout
         android:id="@+id/pass"
-        android:layout_width="116dp"
+        android:layout_width="match_parent"
         android:layout_height="100dp"
         android:layout_alignParentEnd="true"
         android:layout_alignParentRight="true"
         android:layout_alignParentBottom="true"
-        android:layout_marginEnd="56dp"
-        android:layout_marginRight="56dp"
-        android:layout_marginBottom="-13dp"
+        android:layout_marginStart="150dp"
+        android:layout_marginLeft="150dp"
+        android:layout_marginEnd="150dp"
+        android:layout_marginRight="150dp"
+        android:layout_marginBottom="125dp"
         android:orientation="horizontal"
         android:weightSum="13">
 
         <Button
-            android:id="@+id/passButtton"
+            android:id="@+id/placeCards"
+            android:layout_width="116dp"
+            android:layout_height="wrap_content"
+            android:layout_weight="1"
+            android:text="PLAY" />
+
+        <Button
+            android:id="@+id/passButton"
             android:layout_width="116dp"
             android:layout_height="wrap_content"
+            android:layout_gravity="right"
             android:layout_weight="1"
             android:text="PASS" />
 
@@ -174,15 +194,15 @@
 
     <LinearLayout
         android:id="@+id/pause"
-        android:layout_width="116dp"
+        android:layout_width="250dp"
         android:layout_height="100dp"
+        android:layout_alignParentTop="true"
         android:layout_alignParentRight="true"
-        android:layout_alignParentTop="true"
         android:orientation="horizontal"
         android:weightSum="13">
 
         <Button
-            android:id="@+id/pauseButtton"
+            android:id="@+id/pauseButton"
             android:layout_width="50dp"
             android:layout_height="70dp"
             android:layout_weight="1"
Index: app/src/main/java/com/example/president/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.president;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.media.Image;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.widget.ImageView;\r\n\r\nimport java.util.Collection;\r\nimport java.util.Collections;\r\n\r\npublic class MainActivity extends AppCompatActivity {\r\n    Cards cardClass = new Cards();\r\n    ImageView iv_deck, iv_card1, iv_card2, iv_card3, iv_card4, iv_card5, iv_card6, iv_card7, iv_card8, iv_card9, iv_card10, iv_card11, iv_card12, iv_card13;\r\n\r\n    @SuppressLint(\"MissingInflatedId\")\r\n    @Override\r\n\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n        iv_deck = (ImageView) findViewById(R.id.iv_deck);\r\n        iv_card1 = (ImageView) findViewById(R.id.iv_card1);\r\n        iv_card2 = (ImageView) findViewById(R.id.iv_card2);\r\n        iv_card3 = (ImageView) findViewById(R.id.iv_card3);\r\n        iv_card4 = (ImageView) findViewById(R.id.iv_card4);\r\n        iv_card5 = (ImageView) findViewById(R.id.iv_card5);\r\n        iv_card6 = (ImageView) findViewById(R.id.iv_card6);\r\n        iv_card7 = (ImageView) findViewById(R.id.iv_card7);\r\n        iv_card8 = (ImageView) findViewById(R.id.iv_card8);\r\n        iv_card9 = (ImageView) findViewById(R.id.iv_card9);\r\n        iv_card10 = (ImageView) findViewById(R.id.iv_card10);\r\n        iv_card11 = (ImageView) findViewById(R.id.iv_card11);\r\n        iv_card12 = (ImageView) findViewById(R.id.iv_card12);\r\n        iv_card13 = (ImageView) findViewById(R.id.iv_card13);\r\n\r\n\r\n\r\n\r\n\r\n        iv_card1.setVisibility(View.INVISIBLE);\r\n        iv_card2.setVisibility(View.INVISIBLE);\r\n        iv_card3.setVisibility(View.INVISIBLE);\r\n        iv_card4.setVisibility(View.INVISIBLE);\r\n        iv_card5.setVisibility(View.INVISIBLE);\r\n        iv_card6.setVisibility(View.INVISIBLE);\r\n        iv_card7.setVisibility(View.INVISIBLE);\r\n        iv_card8.setVisibility(View.INVISIBLE);\r\n        iv_card9.setVisibility(View.INVISIBLE);\r\n        iv_card10.setVisibility(View.INVISIBLE);\r\n        iv_card11.setVisibility(View.INVISIBLE);\r\n        iv_card12.setVisibility(View.INVISIBLE);\r\n        iv_card13.setVisibility(View.INVISIBLE);\r\n\r\n\r\n        iv_deck.setOnClickListener(new View.OnClickListener(){\r\n            public void onClick(View view){\r\n                cardClass.setCards();\r\n                Collections.shuffle(cardClass.cards);\r\n                cardClass.assignImages(cardClass.cards.get(0), iv_card1);\r\n                cardClass.assignImages(cardClass.cards.get(1), iv_card2);\r\n                cardClass.assignImages(cardClass.cards.get(2), iv_card3);\r\n                cardClass.assignImages(cardClass.cards.get(3), iv_card4);\r\n                cardClass.assignImages(cardClass.cards.get(4), iv_card5);\r\n                cardClass.assignImages(cardClass.cards.get(5), iv_card6);\r\n                cardClass.assignImages(cardClass.cards.get(6), iv_card7);\r\n                cardClass.assignImages(cardClass.cards.get(7), iv_card8);\r\n                cardClass.assignImages(cardClass.cards.get(8), iv_card9);\r\n                cardClass.assignImages(cardClass.cards.get(9), iv_card10);\r\n                cardClass.assignImages(cardClass.cards.get(10), iv_card11);\r\n                cardClass.assignImages(cardClass.cards.get(11), iv_card12);\r\n                cardClass.assignImages(cardClass.cards.get(12), iv_card13);\r\n\r\n\r\n                iv_card1.setVisibility(View.VISIBLE);\r\n                iv_card2.setVisibility(View.VISIBLE);\r\n                iv_card3.setVisibility(View.VISIBLE);\r\n                iv_card4.setVisibility(View.VISIBLE);\r\n                iv_card5.setVisibility(View.VISIBLE);\r\n                iv_card6.setVisibility(View.VISIBLE);\r\n                iv_card7.setVisibility(View.VISIBLE);\r\n                iv_card8.setVisibility(View.VISIBLE);\r\n                iv_card9.setVisibility(View.VISIBLE);\r\n                iv_card10.setVisibility(View.VISIBLE);\r\n                iv_card11.setVisibility(View.VISIBLE);\r\n                iv_card12.setVisibility(View.VISIBLE);\r\n                iv_card13.setVisibility(View.VISIBLE);\r\n\r\n\r\n\r\n                \r\n\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/president/MainActivity.java b/app/src/main/java/com/example/president/MainActivity.java
--- a/app/src/main/java/com/example/president/MainActivity.java	(revision 915f9a0009f5ea8ed0c433b179387ba2c3d301b7)
+++ b/app/src/main/java/com/example/president/MainActivity.java	(date 1679964834109)
@@ -15,6 +15,8 @@
     Cards cardClass = new Cards();
     ImageView iv_deck, iv_card1, iv_card2, iv_card3, iv_card4, iv_card5, iv_card6, iv_card7, iv_card8, iv_card9, iv_card10, iv_card11, iv_card12, iv_card13;
 
+    PresidentGameState presidentGameState = new PresidentGameState();
+
     @SuppressLint("MissingInflatedId")
     @Override
 
Index: app/src/main/java/com/example/president/PresidentComputerPlayer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.president;\r\n\r\nimport com.example.GameFramework.infoMessage.GameInfo;\r\nimport com.example.GameFramework.players.GameComputerPlayer;\r\n\r\nimport java.util.Random;\r\n\r\npublic class PresidentComputerPlayer extends GameComputerPlayer {\r\n    /**\r\n     * constructor\r\n     *\r\n     * @param name the player's name (e.g., \"John\")\r\n     */\r\n    public PresidentComputerPlayer(String name) {\r\n        super(name);\r\n    }\r\n\r\n    @Override\r\n    protected void receiveInfo(GameInfo info) {\r\n        PresidentGameState pga = (PresidentGameState) info;\r\n        if(pga.getPlayerId() != playerNum){\r\n            return;\r\n        }\r\n        Random r = new Random();\r\n        if (r.nextBoolean()) {\r\n            sleep(1000);\r\n            PresidentPassAction ppa = new PresidentPassAction(this);\r\n            this.game.sendAction(ppa);\r\n        } else {\r\n            sleep(1000);\r\n            PresidentPlaceAction app = new PresidentPlaceAction(this);\r\n            this.game.sendAction(app);\r\n\r\n        }\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/president/PresidentComputerPlayer.java b/app/src/main/java/com/example/president/PresidentComputerPlayer.java
--- a/app/src/main/java/com/example/president/PresidentComputerPlayer.java	(revision 915f9a0009f5ea8ed0c433b179387ba2c3d301b7)
+++ b/app/src/main/java/com/example/president/PresidentComputerPlayer.java	(date 1679964834118)
@@ -11,8 +11,12 @@
      *
      * @param name the player's name (e.g., "John")
      */
+
+    int[] cards;
+
     public PresidentComputerPlayer(String name) {
         super(name);
+        cards = new int[13];
     }
 
     @Override
Index: app/src/main/java/com/example/president/HumanPlayer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.president;\r\n\r\nimport android.view.View;\r\nimport android.os.Handler;\r\nimport android.util.Log;\r\n\r\nimport com.example.GameFramework.GameMainActivity;\r\nimport com.example.GameFramework.infoMessage.GameInfo;\r\nimport com.example.GameFramework.players.GameHumanPlayer;\r\n\r\npublic class HumanPlayer extends GameHumanPlayer {\r\n\r\n    private static final String TAG = \"HumanPlayer\";\r\n\r\n    // Not sure if I need this\r\n    private Handler myHandler;\r\n    /**\r\n     * constructor\r\n     *\r\n     * @param name the name of the player\r\n     */\r\n    public HumanPlayer(String name) {\r\n        super(name);\r\n    }\r\n\r\n    @Override\r\n    public View getTopView() {\r\n        View gameView = new View(myActivity);\r\n        return gameView;\r\n    }\r\n\r\n    @Override\r\n    public void receiveInfo(GameInfo info) {\r\n        // wait until handler is there\r\n        if (myHandler == null) Thread.yield();\r\n\r\n        // post message to the handler\r\n        Log.d(TAG, \"receiveInfo - about to post\");\r\n        myHandler.post(new MyRunnable(info, false));\r\n        Log.d(TAG, \"receiveInfo - done with post\");\r\n    }\r\n\r\n    public void setAsGui(GameMainActivity activity) {\r\n        // default behavior is do nothing\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/president/HumanPlayer.java b/app/src/main/java/com/example/president/HumanPlayer.java
--- a/app/src/main/java/com/example/president/HumanPlayer.java	(revision 915f9a0009f5ea8ed0c433b179387ba2c3d301b7)
+++ b/app/src/main/java/com/example/president/HumanPlayer.java	(date 1679964834127)
@@ -19,8 +19,12 @@
      *
      * @param name the name of the player
      */
+
+    int[] cards;
+
     public HumanPlayer(String name) {
         super(name);
+        cards = new int[13];
     }
 
     @Override
Index: build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// Top-level build file where you can add configuration options common to all sub-projects/modules.\r\nplugins {\r\n    id 'com.android.application' version '7.4.0' apply false\r\n    id 'com.android.library' version '7.4.0' apply false\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/build.gradle b/build.gradle
--- a/build.gradle	(revision 915f9a0009f5ea8ed0c433b179387ba2c3d301b7)
+++ b/build.gradle	(date 1679964834140)
@@ -1,5 +1,5 @@
 // Top-level build file where you can add configuration options common to all sub-projects/modules.
 plugins {
-    id 'com.android.application' version '7.4.0' apply false
-    id 'com.android.library' version '7.4.0' apply false
+    id 'com.android.application' version '7.3.1' apply false
+    id 'com.android.library' version '7.3.1' apply false
 }
\ No newline at end of file
